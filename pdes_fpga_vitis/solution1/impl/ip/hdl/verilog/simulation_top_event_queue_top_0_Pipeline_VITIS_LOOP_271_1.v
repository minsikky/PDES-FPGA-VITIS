// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module simulation_top_event_queue_top_0_Pipeline_VITIS_LOOP_271_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        current_V,
        zext_ln145,
        tmp_to_time_V,
        event_queue_buffer_next_V_1_address0,
        event_queue_buffer_next_V_1_ce0,
        event_queue_buffer_next_V_1_q0,
        event_queue_buffer_event_recv_time_V_1_address0,
        event_queue_buffer_event_recv_time_V_1_ce0,
        event_queue_buffer_event_recv_time_V_1_q0,
        event_queue_buffer_event_recv_time_V_1_address1,
        event_queue_buffer_event_recv_time_V_1_ce1,
        event_queue_buffer_event_recv_time_V_1_q1,
        event_queue_buffer_is_issued_V_1_address0,
        event_queue_buffer_is_issued_V_1_ce0,
        event_queue_buffer_is_issued_V_1_we0,
        event_queue_buffer_is_issued_V_1_d0,
        event_queue_buffer_is_issued_V_1_q0,
        event_queue_unissued_size_V_1_i,
        event_queue_unissued_size_V_1_o,
        event_queue_unissued_size_V_1_o_ap_vld,
        event_queue_lp_oldest_unissued_V_1_address0,
        event_queue_lp_oldest_unissued_V_1_ce0,
        event_queue_lp_oldest_unissued_V_1_we0,
        event_queue_lp_oldest_unissued_V_1_d0,
        event_queue_lp_oldest_unissued_V_1_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] current_V;
input  [1:0] zext_ln145;
input  [31:0] tmp_to_time_V;
output  [6:0] event_queue_buffer_next_V_1_address0;
output   event_queue_buffer_next_V_1_ce0;
input  [15:0] event_queue_buffer_next_V_1_q0;
output  [6:0] event_queue_buffer_event_recv_time_V_1_address0;
output   event_queue_buffer_event_recv_time_V_1_ce0;
input  [31:0] event_queue_buffer_event_recv_time_V_1_q0;
output  [6:0] event_queue_buffer_event_recv_time_V_1_address1;
output   event_queue_buffer_event_recv_time_V_1_ce1;
input  [31:0] event_queue_buffer_event_recv_time_V_1_q1;
output  [6:0] event_queue_buffer_is_issued_V_1_address0;
output   event_queue_buffer_is_issued_V_1_ce0;
output   event_queue_buffer_is_issued_V_1_we0;
output  [0:0] event_queue_buffer_is_issued_V_1_d0;
input  [0:0] event_queue_buffer_is_issued_V_1_q0;
input  [15:0] event_queue_unissued_size_V_1_i;
output  [15:0] event_queue_unissued_size_V_1_o;
output   event_queue_unissued_size_V_1_o_ap_vld;
output  [1:0] event_queue_lp_oldest_unissued_V_1_address0;
output   event_queue_lp_oldest_unissued_V_1_ce0;
output   event_queue_lp_oldest_unissued_V_1_we0;
output  [15:0] event_queue_lp_oldest_unissued_V_1_d0;
input  [15:0] event_queue_lp_oldest_unissued_V_1_q0;

reg ap_idle;
reg event_queue_buffer_next_V_1_ce0;
reg event_queue_buffer_event_recv_time_V_1_ce0;
reg event_queue_buffer_event_recv_time_V_1_ce1;
reg[6:0] event_queue_buffer_is_issued_V_1_address0;
reg event_queue_buffer_is_issued_V_1_ce0;
reg event_queue_buffer_is_issued_V_1_we0;
reg[15:0] event_queue_unissued_size_V_1_o;
reg event_queue_unissued_size_V_1_o_ap_vld;
reg[1:0] event_queue_lp_oldest_unissued_V_1_address0;
reg event_queue_lp_oldest_unissued_V_1_ce0;
reg event_queue_lp_oldest_unissued_V_1_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln1069_reg_219;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] current_V_18_reg_209;
reg   [15:0] current_V_18_reg_209_pp0_iter1_reg;
reg   [1:0] event_queue_lp_oldest_unissued_V_1_addr_reg_214;
reg   [1:0] event_queue_lp_oldest_unissued_V_1_addr_reg_214_pp0_iter1_reg;
wire   [0:0] icmp_ln1069_fu_143_p2;
wire   [63:0] zext_ln587_fu_149_p1;
reg   [63:0] zext_ln587_reg_223;
reg   [31:0] event_queue_buffer_event_recv_time_V_1_load_reg_238;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln1081_fu_155_p2;
reg   [0:0] icmp_ln1081_reg_243;
reg   [6:0] event_queue_buffer_is_issued_V_1_addr_reg_247;
reg   [0:0] event_queue_buffer_is_issued_V_1_load_reg_252;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] icmp_ln1065_fu_181_p2;
reg   [0:0] icmp_ln1065_reg_256;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln145_cast_fu_130_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln587_14_fu_187_p1;
wire   [15:0] add_ln886_fu_169_p2;
wire    ap_block_pp0_stage2;
reg   [15:0] current_V_16_fu_44;
wire    ap_loop_init;
reg   [15:0] ap_sig_allocacmp_current_V_18;
wire   [0:0] icmp_ln1081_2_fu_192_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0;
reg    ap_predicate_op30_load_state2;
reg    ap_enable_operation_30;
reg    ap_enable_state2_pp0_iter0_stage1;
reg    ap_predicate_op34_load_state3;
reg    ap_enable_operation_34;
reg    ap_enable_state3_pp0_iter0_stage2;
reg    ap_predicate_op36_store_state3;
reg    ap_enable_operation_36;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

simulation_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        current_V_16_fu_44 <= current_V;
    end else if (((icmp_ln1069_reg_219 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        current_V_16_fu_44 <= event_queue_buffer_next_V_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_V_18_reg_209 <= ap_sig_allocacmp_current_V_18;
        current_V_18_reg_209_pp0_iter1_reg <= current_V_18_reg_209;
        event_queue_lp_oldest_unissued_V_1_addr_reg_214 <= zext_ln145_cast_fu_130_p1;
        event_queue_lp_oldest_unissued_V_1_addr_reg_214_pp0_iter1_reg <= event_queue_lp_oldest_unissued_V_1_addr_reg_214;
        icmp_ln1069_reg_219 <= icmp_ln1069_fu_143_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1069_reg_219 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        event_queue_buffer_event_recv_time_V_1_load_reg_238 <= event_queue_buffer_event_recv_time_V_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1069_reg_219 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1081_fu_155_p2 == 1'd1))) begin
        event_queue_buffer_is_issued_V_1_addr_reg_247 <= zext_ln587_reg_223;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1069_reg_219 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1081_reg_243 == 1'd1))) begin
        event_queue_buffer_is_issued_V_1_load_reg_252 <= event_queue_buffer_is_issued_V_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (event_queue_buffer_is_issued_V_1_load_reg_252 == 1'd1) & (icmp_ln1081_reg_243 == 1'd1))) begin
        icmp_ln1065_reg_256 <= icmp_ln1065_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1069_reg_219 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1081_reg_243 <= icmp_ln1081_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1069_fu_143_p2 == 1'd0))) begin
        zext_ln587_reg_223[15 : 0] <= zext_ln587_fu_149_p1[15 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_219 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_V_18 = current_V;
    end else begin
        ap_sig_allocacmp_current_V_18 = current_V_16_fu_44;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        event_queue_buffer_event_recv_time_V_1_ce0 = 1'b1;
    end else begin
        event_queue_buffer_event_recv_time_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        event_queue_buffer_event_recv_time_V_1_ce1 = 1'b1;
    end else begin
        event_queue_buffer_event_recv_time_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            event_queue_buffer_is_issued_V_1_address0 = event_queue_buffer_is_issued_V_1_addr_reg_247;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            event_queue_buffer_is_issued_V_1_address0 = zext_ln587_reg_223;
        end else begin
            event_queue_buffer_is_issued_V_1_address0 = 'bx;
        end
    end else begin
        event_queue_buffer_is_issued_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        event_queue_buffer_is_issued_V_1_ce0 = 1'b1;
    end else begin
        event_queue_buffer_is_issued_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((event_queue_buffer_is_issued_V_1_q0 == 1'd1) & (icmp_ln1069_reg_219 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1081_reg_243 == 1'd1))) begin
        event_queue_buffer_is_issued_V_1_we0 = 1'b1;
    end else begin
        event_queue_buffer_is_issued_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        event_queue_buffer_next_V_1_ce0 = 1'b1;
    end else begin
        event_queue_buffer_next_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        event_queue_lp_oldest_unissued_V_1_address0 = event_queue_lp_oldest_unissued_V_1_addr_reg_214_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        event_queue_lp_oldest_unissued_V_1_address0 = event_queue_lp_oldest_unissued_V_1_addr_reg_214;
    end else begin
        event_queue_lp_oldest_unissued_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        event_queue_lp_oldest_unissued_V_1_ce0 = 1'b1;
    end else begin
        event_queue_lp_oldest_unissued_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((icmp_ln1065_reg_256 == 1'd1) & (event_queue_buffer_is_issued_V_1_load_reg_252 == 1'd1) & (icmp_ln1081_reg_243 == 1'd1)) | ((icmp_ln1081_2_fu_192_p2 == 1'd1) & (event_queue_buffer_is_issued_V_1_load_reg_252 == 1'd1) & (icmp_ln1081_reg_243 == 1'd1))))) begin
        event_queue_lp_oldest_unissued_V_1_we0 = 1'b1;
    end else begin
        event_queue_lp_oldest_unissued_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((event_queue_buffer_is_issued_V_1_q0 == 1'd1) & (icmp_ln1069_reg_219 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1081_reg_243 == 1'd1))) begin
        event_queue_unissued_size_V_1_o = add_ln886_fu_169_p2;
    end else begin
        event_queue_unissued_size_V_1_o = event_queue_unissued_size_V_1_i;
    end
end

always @ (*) begin
    if (((event_queue_buffer_is_issued_V_1_q0 == 1'd1) & (icmp_ln1069_reg_219 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1081_reg_243 == 1'd1))) begin
        event_queue_unissued_size_V_1_o_ap_vld = 1'b1;
    end else begin
        event_queue_unissued_size_V_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln886_fu_169_p2 = (event_queue_unissued_size_V_1_i + 16'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage2 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage2_subdone)) | ((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_30 = (ap_predicate_op30_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_34 = (ap_predicate_op34_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_36 = (ap_predicate_op36_store_state3 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state2_pp0_iter0_stage1 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage2 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

always @ (*) begin
    ap_predicate_op30_load_state2 = ((icmp_ln1069_reg_219 == 1'd0) & (icmp_ln1081_fu_155_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op34_load_state3 = ((icmp_ln1069_reg_219 == 1'd0) & (icmp_ln1081_reg_243 == 1'd1));
end

always @ (*) begin
    ap_predicate_op36_store_state3 = ((event_queue_buffer_is_issued_V_1_q0 == 1'd1) & (icmp_ln1069_reg_219 == 1'd0) & (icmp_ln1081_reg_243 == 1'd1));
end

assign event_queue_buffer_event_recv_time_V_1_address0 = zext_ln587_14_fu_187_p1;

assign event_queue_buffer_event_recv_time_V_1_address1 = zext_ln587_fu_149_p1;

assign event_queue_buffer_is_issued_V_1_d0 = 1'd0;

assign event_queue_buffer_next_V_1_address0 = zext_ln587_fu_149_p1;

assign event_queue_lp_oldest_unissued_V_1_d0 = current_V_18_reg_209_pp0_iter1_reg;

assign icmp_ln1065_fu_181_p2 = ((event_queue_lp_oldest_unissued_V_1_q0 == 16'd65535) ? 1'b1 : 1'b0);

assign icmp_ln1069_fu_143_p2 = ((ap_sig_allocacmp_current_V_18 == 16'd65535) ? 1'b1 : 1'b0);

assign icmp_ln1081_2_fu_192_p2 = (($signed(event_queue_buffer_event_recv_time_V_1_q0) > $signed(event_queue_buffer_event_recv_time_V_1_load_reg_238)) ? 1'b1 : 1'b0);

assign icmp_ln1081_fu_155_p2 = (($signed(event_queue_buffer_event_recv_time_V_1_q1) > $signed(tmp_to_time_V)) ? 1'b1 : 1'b0);

assign zext_ln145_cast_fu_130_p1 = zext_ln145;

assign zext_ln587_14_fu_187_p1 = event_queue_lp_oldest_unissued_V_1_q0;

assign zext_ln587_fu_149_p1 = ap_sig_allocacmp_current_V_18;

always @ (posedge ap_clk) begin
    zext_ln587_reg_223[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //simulation_top_event_queue_top_0_Pipeline_VITIS_LOOP_271_1
