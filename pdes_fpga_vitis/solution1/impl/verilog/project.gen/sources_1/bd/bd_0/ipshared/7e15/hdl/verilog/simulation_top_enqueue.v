// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module simulation_top_enqueue (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        this_0_0_0_address0,
        this_0_0_0_ce0,
        this_0_0_0_we0,
        this_0_0_0_d0,
        this_0_0_1_address0,
        this_0_0_1_ce0,
        this_0_0_1_we0,
        this_0_0_1_d0,
        this_0_0_1_q0,
        this_0_0_2_address0,
        this_0_0_2_ce0,
        this_0_0_2_we0,
        this_0_0_2_d0,
        this_0_0_3_address0,
        this_0_0_3_ce0,
        this_0_0_3_we0,
        this_0_0_3_d0,
        this_0_0_4_address0,
        this_0_0_4_ce0,
        this_0_0_4_we0,
        this_0_0_4_d0,
        this_0_0_5_address0,
        this_0_0_5_ce0,
        this_0_0_5_we0,
        this_0_0_5_d0,
        this_0_1_address0,
        this_0_1_ce0,
        this_0_1_we0,
        this_0_1_d0,
        this_0_2_address0,
        this_0_2_ce0,
        this_0_2_we0,
        this_0_2_d0,
        this_0_2_q0,
        this_1_address0,
        this_1_ce0,
        this_1_we0,
        this_1_d0,
        this_1_q0,
        this_2_address0,
        this_2_ce0,
        this_2_we0,
        this_2_d0,
        this_2_q0,
        this_3_address0,
        this_3_ce0,
        this_3_we0,
        this_3_d0,
        this_3_q0,
        this_5_address0,
        this_5_ce0,
        this_5_q0,
        p_read,
        p_read1,
        p_read2,
        this_8_read,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        causality_violation_stream_din,
        causality_violation_stream_num_data_valid,
        causality_violation_stream_fifo_cap,
        causality_violation_stream_full_n,
        causality_violation_stream_write,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] this_0_0_0_address0;
output   this_0_0_0_ce0;
output   this_0_0_0_we0;
output  [31:0] this_0_0_0_d0;
output  [6:0] this_0_0_1_address0;
output   this_0_0_1_ce0;
output   this_0_0_1_we0;
output  [31:0] this_0_0_1_d0;
input  [31:0] this_0_0_1_q0;
output  [6:0] this_0_0_2_address0;
output   this_0_0_2_ce0;
output   this_0_0_2_we0;
output  [31:0] this_0_0_2_d0;
output  [6:0] this_0_0_3_address0;
output   this_0_0_3_ce0;
output   this_0_0_3_we0;
output  [15:0] this_0_0_3_d0;
output  [6:0] this_0_0_4_address0;
output   this_0_0_4_ce0;
output   this_0_0_4_we0;
output  [15:0] this_0_0_4_d0;
output  [6:0] this_0_0_5_address0;
output   this_0_0_5_ce0;
output   this_0_0_5_we0;
output  [0:0] this_0_0_5_d0;
output  [6:0] this_0_1_address0;
output   this_0_1_ce0;
output   this_0_1_we0;
output  [0:0] this_0_1_d0;
output  [6:0] this_0_2_address0;
output   this_0_2_ce0;
output   this_0_2_we0;
output  [15:0] this_0_2_d0;
input  [15:0] this_0_2_q0;
output  [1:0] this_1_address0;
output   this_1_ce0;
output   this_1_we0;
output  [15:0] this_1_d0;
input  [15:0] this_1_q0;
output  [1:0] this_2_address0;
output   this_2_ce0;
output   this_2_we0;
output  [15:0] this_2_d0;
input  [15:0] this_2_q0;
output  [1:0] this_3_address0;
output   this_3_ce0;
output   this_3_we0;
output  [15:0] this_3_d0;
input  [15:0] this_3_q0;
output  [1:0] this_5_address0;
output   this_5_ce0;
input  [31:0] this_5_q0;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] this_8_read;
input  [31:0] p_read3;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [0:0] p_read8;
output  [47:0] causality_violation_stream_din;
input  [1:0] causality_violation_stream_num_data_valid;
input  [1:0] causality_violation_stream_fifo_cap;
input   causality_violation_stream_full_n;
output   causality_violation_stream_write;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg this_0_0_0_ce0;
reg this_0_0_0_we0;
reg[6:0] this_0_0_1_address0;
reg this_0_0_1_ce0;
reg this_0_0_1_we0;
reg this_0_0_2_ce0;
reg this_0_0_2_we0;
reg this_0_0_3_ce0;
reg this_0_0_3_we0;
reg this_0_0_4_ce0;
reg this_0_0_4_we0;
reg this_0_0_5_ce0;
reg this_0_0_5_we0;
reg this_0_1_ce0;
reg this_0_1_we0;
reg[6:0] this_0_2_address0;
reg this_0_2_ce0;
reg this_0_2_we0;
reg[15:0] this_0_2_d0;
reg[1:0] this_1_address0;
reg this_1_ce0;
reg this_1_we0;
reg[1:0] this_2_address0;
reg this_2_ce0;
reg this_2_we0;
reg[1:0] this_3_address0;
reg this_3_ce0;
reg this_3_we0;
reg this_5_ce0;
reg causality_violation_stream_write;
reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    causality_violation_stream_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1073_fu_417_p2;
wire   [0:0] icmp_ln1077_fu_406_p2;
reg   [0:0] icmp_ln1077_reg_599;
wire   [63:0] zext_ln587_fu_412_p1;
reg   [63:0] zext_ln587_reg_603;
reg   [6:0] this_0_2_addr_reg_619;
reg   [1:0] this_3_addr_reg_624;
reg   [15:0] this_0_2_load_reg_629;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln1065_fu_440_p2;
reg   [0:0] icmp_ln1065_reg_634;
reg   [1:0] this_1_addr_reg_646;
wire    ap_CS_fsm_state4;
reg   [15:0] current_V_reg_651;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln1065_21_fu_451_p2;
reg   [0:0] icmp_ln1065_21_reg_656;
wire   [0:0] icmp_ln1069_fu_470_p2;
reg   [0:0] icmp_ln1069_reg_677;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln587_21_fu_476_p1;
reg   [63:0] zext_ln587_21_reg_681;
wire    ap_CS_fsm_state7;
wire   [0:0] grp_fu_391_p2;
reg   [15:0] prev_V_load_reg_699;
wire   [0:0] icmp_ln1065_22_fu_488_p2;
reg   [0:0] icmp_ln1065_22_reg_704;
reg   [6:0] this_0_2_addr_2_reg_708;
wire   [1:0] this_2_addr_1_gep_fu_355_p3;
reg   [1:0] this_2_addr_1_reg_713;
wire   [0:0] icmp_ln1065_23_fu_504_p2;
reg   [0:0] icmp_ln1065_23_reg_718;
wire    ap_CS_fsm_state9;
reg   [15:0] ap_phi_mux_this_7_0_phi_fu_367_p4;
reg   [15:0] this_7_0_reg_364;
wire   [15:0] add_ln886_fu_509_p2;
wire    ap_CS_fsm_state10;
reg   [15:0] ap_phi_mux_write_flag_0_phi_fu_376_p4;
reg   [15:0] write_flag_0_reg_373;
wire   [15:0] add_ln886_5_fu_515_p2;
reg   [15:0] ap_phi_mux_this_6_0_phi_fu_385_p4;
reg   [15:0] this_6_0_reg_382;
wire   [63:0] zext_ln587_19_fu_429_p1;
wire   [63:0] zext_ln587_20_fu_446_p1;
wire   [63:0] zext_ln587_22_fu_494_p1;
reg   [15:0] prev_V_fu_90;
reg   [15:0] prev_V_1_fu_94;
wire    ap_CS_fsm_state8;
reg    ap_block_state2;
wire   [8:0] tmp_fu_396_p4;
reg   [15:0] ap_return_0_preg;
reg   [15:0] ap_return_1_preg;
reg   [15:0] ap_return_2_preg;
reg   [9:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 16'd0;
#0 ap_return_2_preg = 16'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_return_0_preg <= ap_phi_mux_this_6_0_phi_fu_385_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_return_1_preg <= ap_phi_mux_this_7_0_phi_fu_367_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_return_2_preg <= ap_phi_mux_write_flag_0_phi_fu_376_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_21_fu_451_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        prev_V_1_fu_94 <= this_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        prev_V_1_fu_94 <= this_0_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_21_fu_451_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        prev_V_fu_90 <= 16'd65535;
    end else if (((grp_fu_391_p2 == 1'd0) & (icmp_ln1069_reg_677 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        prev_V_fu_90 <= prev_V_1_fu_94;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1077_reg_599 == 1'd1))) begin
        this_6_0_reg_382 <= this_0_2_load_reg_629;
    end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1077_fu_406_p2 == 1'd0) & (ap_start == 1'b1))) begin
        this_6_0_reg_382 <= p_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1077_reg_599 == 1'd1))) begin
        this_7_0_reg_364 <= add_ln886_fu_509_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1077_fu_406_p2 == 1'd0) & (ap_start == 1'b1))) begin
        this_7_0_reg_364 <= p_read1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1077_reg_599 == 1'd1))) begin
        write_flag_0_reg_373 <= add_ln886_5_fu_515_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1077_fu_406_p2 == 1'd0) & (ap_start == 1'b1))) begin
        write_flag_0_reg_373 <= p_read2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        current_V_reg_651 <= this_1_q0;
        icmp_ln1065_21_reg_656 <= icmp_ln1065_21_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((grp_fu_391_p2 == 1'd1) | (icmp_ln1069_reg_677 == 1'd1)))) begin
        icmp_ln1065_22_reg_704 <= icmp_ln1065_22_fu_488_p2;
        prev_V_load_reg_699 <= prev_V_fu_90;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln1065_23_reg_718 <= icmp_ln1065_23_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln1065_reg_634 <= icmp_ln1065_fu_440_p2;
        this_0_2_load_reg_629 <= this_0_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln1069_reg_677 <= icmp_ln1069_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln1077_reg_599 <= icmp_ln1077_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((icmp_ln1065_22_fu_488_p2 == 1'd0) & (icmp_ln1069_reg_677 == 1'd1)) | ((icmp_ln1065_22_fu_488_p2 == 1'd0) & (grp_fu_391_p2 == 1'd1))))) begin
        this_0_2_addr_2_reg_708 <= zext_ln587_22_fu_494_p1;
        this_2_addr_1_reg_713 <= zext_ln587_reg_603;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        this_0_2_addr_reg_619 <= zext_ln587_19_fu_429_p1;
        this_3_addr_reg_624 <= zext_ln587_reg_603;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        this_1_addr_reg_646 <= zext_ln587_reg_603;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1069_fu_470_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        zext_ln587_21_reg_681[15 : 0] <= zext_ln587_21_fu_476_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1077_fu_406_p2 == 1'd1))) begin
        zext_ln587_reg_603[15 : 0] <= zext_ln587_fu_412_p1[15 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1077_reg_599 == 1'd1))) begin
        ap_phi_mux_this_6_0_phi_fu_385_p4 = this_0_2_load_reg_629;
    end else begin
        ap_phi_mux_this_6_0_phi_fu_385_p4 = this_6_0_reg_382;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1077_reg_599 == 1'd1))) begin
        ap_phi_mux_this_7_0_phi_fu_367_p4 = add_ln886_fu_509_p2;
    end else begin
        ap_phi_mux_this_7_0_phi_fu_367_p4 = this_7_0_reg_364;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1077_reg_599 == 1'd1))) begin
        ap_phi_mux_write_flag_0_phi_fu_376_p4 = add_ln886_5_fu_515_p2;
    end else begin
        ap_phi_mux_write_flag_0_phi_fu_376_p4 = write_flag_0_reg_373;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_return_0 = ap_phi_mux_this_6_0_phi_fu_385_p4;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_return_1 = ap_phi_mux_this_7_0_phi_fu_367_p4;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_return_2 = ap_phi_mux_write_flag_0_phi_fu_376_p4;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1073_fu_417_p2 == 1'd1))) begin
        causality_violation_stream_blk_n = causality_violation_stream_full_n;
    end else begin
        causality_violation_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln1073_fu_417_p2 == 1'd1))) begin
        causality_violation_stream_write = 1'b1;
    end else begin
        causality_violation_stream_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_0_0_ce0 = 1'b1;
    end else begin
        this_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_0_0_we0 = 1'b1;
    end else begin
        this_0_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        this_0_0_1_address0 = zext_ln587_21_fu_476_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        this_0_0_1_address0 = zext_ln587_20_fu_446_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        this_0_0_1_address0 = zext_ln587_19_fu_429_p1;
    end else begin
        this_0_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        this_0_0_1_ce0 = 1'b1;
    end else begin
        this_0_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_0_1_we0 = 1'b1;
    end else begin
        this_0_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_0_2_ce0 = 1'b1;
    end else begin
        this_0_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_0_2_we0 = 1'b1;
    end else begin
        this_0_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_0_3_ce0 = 1'b1;
    end else begin
        this_0_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_0_3_we0 = 1'b1;
    end else begin
        this_0_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_0_4_ce0 = 1'b1;
    end else begin
        this_0_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_0_4_we0 = 1'b1;
    end else begin
        this_0_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_0_5_ce0 = 1'b1;
    end else begin
        this_0_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_0_5_we0 = 1'b1;
    end else begin
        this_0_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_1_ce0 = 1'b1;
    end else begin
        this_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        this_0_1_we0 = 1'b1;
    end else begin
        this_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        this_0_2_address0 = this_0_2_addr_2_reg_708;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state7) & (((icmp_ln1065_22_fu_488_p2 == 1'd1) & (icmp_ln1069_reg_677 == 1'd1)) | ((icmp_ln1065_22_fu_488_p2 == 1'd1) & (grp_fu_391_p2 == 1'd1)))))) begin
        this_0_2_address0 = this_0_2_addr_reg_619;
    end else if (((1'b1 == ap_CS_fsm_state7) & (((icmp_ln1065_22_fu_488_p2 == 1'd0) & (icmp_ln1069_reg_677 == 1'd1)) | ((icmp_ln1065_22_fu_488_p2 == 1'd0) & (grp_fu_391_p2 == 1'd1))))) begin
        this_0_2_address0 = zext_ln587_22_fu_494_p1;
    end else if (((grp_fu_391_p2 == 1'd0) & (icmp_ln1069_reg_677 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        this_0_2_address0 = zext_ln587_21_reg_681;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        this_0_2_address0 = zext_ln587_19_fu_429_p1;
    end else begin
        this_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | ((grp_fu_391_p2 == 1'd0) & (icmp_ln1069_reg_677 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == ap_CS_fsm_state7) & (((icmp_ln1065_22_fu_488_p2 == 1'd1) & (icmp_ln1069_reg_677 == 1'd1)) | ((icmp_ln1065_22_fu_488_p2 == 1'd1) & (grp_fu_391_p2 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state7) & (((icmp_ln1065_22_fu_488_p2 == 1'd0) & (icmp_ln1069_reg_677 == 1'd1)) | ((icmp_ln1065_22_fu_488_p2 == 1'd0) & (grp_fu_391_p2 == 1'd1)))))) begin
        this_0_2_ce0 = 1'b1;
    end else begin
        this_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        this_0_2_d0 = p_read;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        this_0_2_d0 = this_0_2_q0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (((icmp_ln1065_22_fu_488_p2 == 1'd1) & (icmp_ln1069_reg_677 == 1'd1)) | ((icmp_ln1065_22_fu_488_p2 == 1'd1) & (grp_fu_391_p2 == 1'd1))))) begin
        this_0_2_d0 = current_V_reg_651;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        this_0_2_d0 = 16'd65535;
    end else begin
        this_0_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln1065_22_reg_704 == 1'd0) & (icmp_ln1065_21_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln1077_reg_599 == 1'd1)) | (~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (((icmp_ln1065_22_fu_488_p2 == 1'd1) & (icmp_ln1069_reg_677 == 1'd1)) | ((icmp_ln1065_22_fu_488_p2 == 1'd1) & (grp_fu_391_p2 == 1'd1)))))) begin
        this_0_2_we0 = 1'b1;
    end else begin
        this_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        this_1_address0 = this_1_addr_reg_646;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        this_1_address0 = zext_ln587_reg_603;
    end else begin
        this_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        this_1_ce0 = 1'b1;
    end else begin
        this_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1065_21_fu_451_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == ap_CS_fsm_state7) & (((icmp_ln1065_22_fu_488_p2 == 1'd1) & (icmp_ln1069_reg_677 == 1'd1)) | ((icmp_ln1065_22_fu_488_p2 == 1'd1) & (grp_fu_391_p2 == 1'd1)))))) begin
        this_1_we0 = 1'b1;
    end else begin
        this_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        this_2_address0 = this_2_addr_1_reg_713;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        this_2_address0 = this_2_addr_1_gep_fu_355_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        this_2_address0 = zext_ln587_reg_603;
    end else begin
        this_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        this_2_ce0 = 1'b1;
    end else begin
        this_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1065_23_reg_718 == 1'd1) & (icmp_ln1065_22_reg_704 == 1'd0) & (icmp_ln1065_21_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln1077_reg_599 == 1'd1)) | ((icmp_ln1065_21_fu_451_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        this_2_we0 = 1'b1;
    end else begin
        this_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        this_3_address0 = this_3_addr_reg_624;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        this_3_address0 = zext_ln587_reg_603;
    end else begin
        this_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        this_3_ce0 = 1'b1;
    end else begin
        this_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & ((grp_fu_391_p2 == 1'd1) | (icmp_ln1065_reg_634 == 1'd1)))) begin
        this_3_we0 = 1'b1;
    end else begin
        this_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        this_5_ce0 = 1'b1;
    end else begin
        this_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1077_fu_406_p2 == 1'd0) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1077_fu_406_p2 == 1'd1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln1065_21_fu_451_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (((icmp_ln1065_22_fu_488_p2 == 1'd1) & (icmp_ln1069_reg_677 == 1'd1)) | ((icmp_ln1065_22_fu_488_p2 == 1'd1) & (grp_fu_391_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((1'b1 == ap_CS_fsm_state7) & (((icmp_ln1065_22_fu_488_p2 == 1'd0) & (icmp_ln1069_reg_677 == 1'd1)) | ((icmp_ln1065_22_fu_488_p2 == 1'd0) & (grp_fu_391_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln886_5_fu_515_p2 = (this_8_read + 16'd1);

assign add_ln886_fu_509_p2 = (p_read1 + 16'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state2 = ((icmp_ln1073_fu_417_p2 == 1'd1) & (causality_violation_stream_full_n == 1'b0));
end

assign causality_violation_stream_din = {{p_read4}, {p_read7}};

assign grp_fu_391_p2 = (($signed(this_0_0_1_q0) > $signed(p_read4)) ? 1'b1 : 1'b0);

assign icmp_ln1065_21_fu_451_p2 = ((this_1_q0 == 16'd65535) ? 1'b1 : 1'b0);

assign icmp_ln1065_22_fu_488_p2 = ((prev_V_fu_90 == 16'd65535) ? 1'b1 : 1'b0);

assign icmp_ln1065_23_fu_504_p2 = ((prev_V_load_reg_699 == this_2_q0) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_440_p2 = ((this_3_q0 == 16'd65535) ? 1'b1 : 1'b0);

assign icmp_ln1069_fu_470_p2 = ((prev_V_1_fu_94 == 16'd65535) ? 1'b1 : 1'b0);

assign icmp_ln1073_fu_417_p2 = (($signed(this_5_q0) > $signed(p_read4)) ? 1'b1 : 1'b0);

assign icmp_ln1077_fu_406_p2 = ((tmp_fu_396_p4 == 9'd0) ? 1'b1 : 1'b0);

assign this_0_0_0_address0 = zext_ln587_19_fu_429_p1;

assign this_0_0_0_d0 = p_read3;

assign this_0_0_1_d0 = p_read4;

assign this_0_0_2_address0 = zext_ln587_19_fu_429_p1;

assign this_0_0_2_d0 = p_read5;

assign this_0_0_3_address0 = zext_ln587_19_fu_429_p1;

assign this_0_0_3_d0 = p_read6;

assign this_0_0_4_address0 = zext_ln587_19_fu_429_p1;

assign this_0_0_4_d0 = p_read7;

assign this_0_0_5_address0 = zext_ln587_19_fu_429_p1;

assign this_0_0_5_d0 = p_read8;

assign this_0_1_address0 = zext_ln587_19_fu_429_p1;

assign this_0_1_d0 = 1'd0;

assign this_1_d0 = p_read;

assign this_2_addr_1_gep_fu_355_p3 = zext_ln587_reg_603;

assign this_2_d0 = p_read;

assign this_3_d0 = p_read;

assign this_5_address0 = zext_ln587_fu_412_p1;

assign tmp_fu_396_p4 = {{this_8_read[15:7]}};

assign zext_ln587_19_fu_429_p1 = p_read;

assign zext_ln587_20_fu_446_p1 = this_3_q0;

assign zext_ln587_21_fu_476_p1 = prev_V_1_fu_94;

assign zext_ln587_22_fu_494_p1 = prev_V_fu_90;

assign zext_ln587_fu_412_p1 = p_read7;

always @ (posedge ap_clk) begin
    zext_ln587_reg_603[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln587_21_reg_681[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //simulation_top_enqueue
