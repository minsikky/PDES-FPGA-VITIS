// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module simulation_top_process_event (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        this_prng_generators_address0,
        this_prng_generators_ce0,
        this_prng_generators_we0,
        this_prng_generators_d0,
        this_prng_generators_q0,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read6,
        state_buffer_input_stream_din,
        state_buffer_input_stream_num_data_valid,
        state_buffer_input_stream_fifo_cap,
        state_buffer_input_stream_full_n,
        state_buffer_input_stream_write,
        lpcore_output_event_stream_1_din,
        lpcore_output_event_stream_1_full_n,
        lpcore_output_event_stream_1_write,
        cancellation_unit_input_stream_din,
        cancellation_unit_input_stream_num_data_valid,
        cancellation_unit_input_stream_fifo_cap,
        cancellation_unit_input_stream_full_n,
        cancellation_unit_input_stream_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] this_prng_generators_address0;
output   this_prng_generators_ce0;
output   this_prng_generators_we0;
output  [7:0] this_prng_generators_d0;
input  [7:0] this_prng_generators_q0;
input  [31:0] p_read1;
input  [15:0] p_read2;
input  [0:0] p_read3;
input  [15:0] p_read4;
input  [31:0] p_read6;
output  [79:0] state_buffer_input_stream_din;
input  [1:0] state_buffer_input_stream_num_data_valid;
input  [1:0] state_buffer_input_stream_fifo_cap;
input   state_buffer_input_stream_full_n;
output   state_buffer_input_stream_write;
output  [128:0] lpcore_output_event_stream_1_din;
input   lpcore_output_event_stream_1_full_n;
output   lpcore_output_event_stream_1_write;
output  [128:0] cancellation_unit_input_stream_din;
input  [1:0] cancellation_unit_input_stream_num_data_valid;
input  [1:0] cancellation_unit_input_stream_fifo_cap;
input   cancellation_unit_input_stream_full_n;
output   cancellation_unit_input_stream_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] this_prng_generators_address0;
reg this_prng_generators_ce0;
reg this_prng_generators_we0;
reg[7:0] this_prng_generators_d0;
reg state_buffer_input_stream_write;
reg lpcore_output_event_stream_1_write;
reg cancellation_unit_input_stream_write;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    state_buffer_input_stream_blk_n;
wire   [0:0] p_read_2_read_fu_92_p2;
reg    lpcore_output_event_stream_1_blk_n;
wire    ap_CS_fsm_state5;
reg    cancellation_unit_input_stream_blk_n;
wire   [16:0] idx_fu_241_p3;
reg   [16:0] idx_reg_467;
wire   [0:0] and_ln24_fu_271_p2;
reg   [0:0] and_ln24_reg_473;
reg   [3:0] this_state_V_reg_477;
wire    ap_CS_fsm_state2;
reg   [3:0] this_state_V_1_reg_482;
wire    ap_CS_fsm_state3;
wire   [7:0] ret_V_3_fu_335_p3;
reg   [7:0] rand_time_V_1_reg_151;
wire   [1:0] trunc_ln_fu_416_p3;
reg   [1:0] ap_phi_mux_ret_V_4_phi_fu_167_p4;
reg   [1:0] ret_V_4_reg_163;
reg    ap_block_state5;
wire   [63:0] zext_ln25_fu_277_p1;
wire   [63:0] zext_ln25_1_fu_345_p1;
reg    ap_block_state1;
wire   [128:0] zext_ln174_fu_446_p1;
wire    ap_CS_fsm_state4;
wire   [7:0] ret_V_fu_407_p3;
wire  signed [15:0] sext_ln10_fu_185_p0;
wire  signed [15:0] tmp_fu_189_p1;
wire  signed [16:0] sext_ln10_fu_185_p1;
wire   [16:0] sub_ln10_fu_197_p2;
wire   [15:0] lshr_ln10_1_fu_203_p4;
wire   [16:0] zext_ln10_fu_213_p1;
wire  signed [15:0] trunc_ln10_1_fu_223_p1;
wire   [14:0] trunc_ln10_1_fu_223_p4;
wire  signed [15:0] sext_ln10_1_fu_233_p1;
wire   [0:0] tmp_fu_189_p3;
wire   [16:0] sub_ln10_1_fu_217_p2;
wire   [16:0] zext_ln10_1_fu_237_p1;
wire  signed [15:0] icmp_ln24_fu_249_p0;
wire   [15:0] tmp_10_fu_255_p4;
wire   [0:0] icmp_ln24_fu_249_p2;
wire   [0:0] icmp_ln24_1_fu_265_p2;
wire   [0:0] tmp_12_fu_289_p3;
wire   [0:0] tmp_11_fu_281_p3;
wire   [0:0] tmp_13_fu_297_p3;
wire   [0:0] tmp_14_fu_305_p3;
wire   [0:0] xor_ln232_1_fu_319_p2;
wire   [0:0] xor_ln232_fu_313_p2;
wire   [6:0] trunc_ln1544_fu_331_p1;
wire   [0:0] rhs_fu_325_p2;
wire   [0:0] tmp_15_fu_349_p3;
wire   [0:0] tmp_17_fu_365_p3;
wire   [0:0] tmp_16_fu_357_p3;
wire   [0:0] tmp_18_fu_373_p3;
wire   [0:0] xor_ln232_4_fu_391_p2;
wire   [0:0] xor_ln232_3_fu_385_p2;
wire   [6:0] trunc_ln1544_1_fu_403_p1;
wire   [0:0] rhs_1_fu_397_p2;
wire   [0:0] trunc_ln1715_fu_381_p1;
wire   [31:0] zext_ln75_fu_425_p1;
wire   [31:0] new_event_recv_time_V_fu_429_p2;
wire   [113:0] tmp_1_fu_434_p6;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln24_reg_473) & (1'b1 == ap_CS_fsm_state2))) begin
        rand_time_V_1_reg_151 <= 8'd0;
    end else if (((1'd1 == and_ln24_reg_473) & (1'b1 == ap_CS_fsm_state3))) begin
        rand_time_V_1_reg_151 <= ret_V_3_fu_335_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln24_reg_473) & (1'b1 == ap_CS_fsm_state3))) begin
        ret_V_4_reg_163 <= 2'd0;
    end else if ((~(((p_read3 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read3 == 1'd0) & (lpcore_output_event_stream_1_full_n == 1'b0))) & (1'd1 == and_ln24_reg_473) & (p_read3 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ret_V_4_reg_163 <= trunc_ln_fu_416_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((p_read3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        and_ln24_reg_473 <= and_ln24_fu_271_p2;
        idx_reg_467 <= idx_fu_241_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln24_reg_473) & (1'b1 == ap_CS_fsm_state3))) begin
        this_state_V_1_reg_482 <= zext_ln25_1_fu_345_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln24_reg_473) & (1'b1 == ap_CS_fsm_state2))) begin
        this_state_V_reg_477 <= zext_ln25_fu_277_p1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | ((p_read3 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0)))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((((p_read3 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read3 == 1'd0) & (lpcore_output_event_stream_1_full_n == 1'b0)))) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | (~(((p_read3 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read3 == 1'd0) & (lpcore_output_event_stream_1_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln24_reg_473) & (p_read3 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_phi_mux_ret_V_4_phi_fu_167_p4 = trunc_ln_fu_416_p3;
    end else begin
        ap_phi_mux_ret_V_4_phi_fu_167_p4 = ret_V_4_reg_163;
    end
end

always @ (*) begin
    if ((~(((p_read3 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read3 == 1'd0) & (lpcore_output_event_stream_1_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((p_read3 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        cancellation_unit_input_stream_blk_n = cancellation_unit_input_stream_full_n;
    end else begin
        cancellation_unit_input_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((p_read3 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read3 == 1'd0) & (lpcore_output_event_stream_1_full_n == 1'b0))) & (p_read3 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        cancellation_unit_input_stream_write = 1'b1;
    end else begin
        cancellation_unit_input_stream_write = 1'b0;
    end
end

always @ (*) begin
    if (((p_read3 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        lpcore_output_event_stream_1_blk_n = lpcore_output_event_stream_1_full_n;
    end else begin
        lpcore_output_event_stream_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((p_read3 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read3 == 1'd0) & (lpcore_output_event_stream_1_full_n == 1'b0))) & (p_read3 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        lpcore_output_event_stream_1_write = 1'b1;
    end else begin
        lpcore_output_event_stream_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((p_read3 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        state_buffer_input_stream_blk_n = state_buffer_input_stream_full_n;
    end else begin
        state_buffer_input_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | ((p_read3 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0))) & (p_read3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        state_buffer_input_stream_write = 1'b1;
    end else begin
        state_buffer_input_stream_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        this_prng_generators_address0 = this_state_V_1_reg_482;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        this_prng_generators_address0 = this_state_V_reg_477;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        this_prng_generators_address0 = zext_ln25_fu_277_p1;
    end else begin
        this_prng_generators_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | (~(((p_read3 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read3 == 1'd0) & (lpcore_output_event_stream_1_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5)))) begin
        this_prng_generators_ce0 = 1'b1;
    end else begin
        this_prng_generators_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        this_prng_generators_d0 = ret_V_fu_407_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        this_prng_generators_d0 = ret_V_3_fu_335_p3;
    end else begin
        this_prng_generators_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln24_reg_473) & (1'b1 == ap_CS_fsm_state3)) | (~(((p_read3 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read3 == 1'd0) & (lpcore_output_event_stream_1_full_n == 1'b0))) & (1'd1 == and_ln24_reg_473) & (p_read3 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        this_prng_generators_we0 = 1'b1;
    end else begin
        this_prng_generators_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | ((p_read3 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0))) & (p_read_2_read_fu_92_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~((ap_start == 1'b0) | ((p_read3 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0))) & (p_read3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'd0 == and_ln24_reg_473) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if ((~(((p_read3 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read3 == 1'd0) & (lpcore_output_event_stream_1_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln24_fu_271_p2 = (icmp_ln24_fu_249_p2 & icmp_ln24_1_fu_265_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | ((p_read3 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5 = (((p_read3 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read3 == 1'd0) & (lpcore_output_event_stream_1_full_n == 1'b0)));
end

assign cancellation_unit_input_stream_din = zext_ln174_fu_446_p1;

assign icmp_ln24_1_fu_265_p2 = (($signed(tmp_10_fu_255_p4) < $signed(16'd1)) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_249_p0 = p_read2;

assign icmp_ln24_fu_249_p2 = (($signed(icmp_ln24_fu_249_p0) > $signed(16'd65534)) ? 1'b1 : 1'b0);

assign idx_fu_241_p3 = ((tmp_fu_189_p3[0:0] == 1'b1) ? sub_ln10_1_fu_217_p2 : zext_ln10_1_fu_237_p1);

assign lpcore_output_event_stream_1_din = zext_ln174_fu_446_p1;

assign lshr_ln10_1_fu_203_p4 = {{sub_ln10_fu_197_p2[16:1]}};

assign new_event_recv_time_V_fu_429_p2 = (zext_ln75_fu_425_p1 + p_read1);

assign p_read_2_read_fu_92_p2 = p_read3;

assign ret_V_3_fu_335_p3 = {{trunc_ln1544_fu_331_p1}, {rhs_fu_325_p2}};

assign ret_V_fu_407_p3 = {{trunc_ln1544_1_fu_403_p1}, {rhs_1_fu_397_p2}};

assign rhs_1_fu_397_p2 = (xor_ln232_4_fu_391_p2 ^ xor_ln232_3_fu_385_p2);

assign rhs_fu_325_p2 = (xor_ln232_fu_313_p2 ^ xor_ln232_1_fu_319_p2);

assign sext_ln10_1_fu_233_p1 = $signed(trunc_ln10_1_fu_223_p4);

assign sext_ln10_fu_185_p0 = p_read2;

assign sext_ln10_fu_185_p1 = sext_ln10_fu_185_p0;

assign state_buffer_input_stream_din = {{{p_read6}, {p_read1}}, {p_read4}};

assign sub_ln10_1_fu_217_p2 = (17'd0 - zext_ln10_fu_213_p1);

assign sub_ln10_fu_197_p2 = ($signed(17'd0) - $signed(sext_ln10_fu_185_p1));

assign tmp_10_fu_255_p4 = {{idx_fu_241_p3[16:1]}};

assign tmp_11_fu_281_p3 = this_prng_generators_q0[32'd7];

assign tmp_12_fu_289_p3 = this_prng_generators_q0[32'd5];

assign tmp_13_fu_297_p3 = this_prng_generators_q0[32'd4];

assign tmp_14_fu_305_p3 = this_prng_generators_q0[32'd3];

assign tmp_15_fu_349_p3 = this_prng_generators_q0[32'd7];

assign tmp_16_fu_357_p3 = this_prng_generators_q0[32'd5];

assign tmp_17_fu_365_p3 = this_prng_generators_q0[32'd4];

assign tmp_18_fu_373_p3 = this_prng_generators_q0[32'd3];

assign tmp_1_fu_434_p6 = {{{{{ap_phi_mux_ret_V_4_phi_fu_167_p4}, {p_read4}}, {32'd0}}, {new_event_recv_time_V_fu_429_p2}}, {p_read1}};

assign tmp_fu_189_p1 = p_read2;

assign tmp_fu_189_p3 = tmp_fu_189_p1[32'd15];

assign trunc_ln10_1_fu_223_p1 = p_read2;

assign trunc_ln10_1_fu_223_p4 = {{trunc_ln10_1_fu_223_p1[15:1]}};

assign trunc_ln1544_1_fu_403_p1 = this_prng_generators_q0[6:0];

assign trunc_ln1544_fu_331_p1 = this_prng_generators_q0[6:0];

assign trunc_ln1715_fu_381_p1 = this_prng_generators_q0[0:0];

assign trunc_ln_fu_416_p3 = {{trunc_ln1715_fu_381_p1}, {rhs_1_fu_397_p2}};

assign xor_ln232_1_fu_319_p2 = (tmp_14_fu_305_p3 ^ tmp_13_fu_297_p3);

assign xor_ln232_3_fu_385_p2 = (tmp_17_fu_365_p3 ^ tmp_15_fu_349_p3);

assign xor_ln232_4_fu_391_p2 = (tmp_18_fu_373_p3 ^ tmp_16_fu_357_p3);

assign xor_ln232_fu_313_p2 = (tmp_12_fu_289_p3 ^ tmp_11_fu_281_p3);

assign zext_ln10_1_fu_237_p1 = $unsigned(sext_ln10_1_fu_233_p1);

assign zext_ln10_fu_213_p1 = lshr_ln10_1_fu_203_p4;

assign zext_ln174_fu_446_p1 = tmp_1_fu_434_p6;

assign zext_ln25_1_fu_345_p1 = idx_reg_467;

assign zext_ln25_fu_277_p1 = idx_reg_467;

assign zext_ln75_fu_425_p1 = rand_time_V_1_reg_151;

endmodule //simulation_top_process_event
