// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module event_queue_kernel_event_queue_kernel_Pipeline_VITIS_LOOP_269_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        g_event_queue_lp_oldest_unissued_V_0_load_1,
        g_event_queue_lp_oldest_unissued_V_1_load_1,
        g_event_queue_lp_oldest_unissued_V_2_load_1,
        g_event_queue_lp_oldest_unissued_V_3_load_1,
        earliest_lp_V_1_out,
        earliest_lp_V_1_out_ap_vld,
        g_event_queue_buffer_event_recv_time_V_address0,
        g_event_queue_buffer_event_recv_time_V_ce0,
        g_event_queue_buffer_event_recv_time_V_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] g_event_queue_lp_oldest_unissued_V_0_load_1;
input  [15:0] g_event_queue_lp_oldest_unissued_V_1_load_1;
input  [15:0] g_event_queue_lp_oldest_unissued_V_2_load_1;
input  [15:0] g_event_queue_lp_oldest_unissued_V_3_load_1;
output  [1:0] earliest_lp_V_1_out;
output   earliest_lp_V_1_out_ap_vld;
output  [6:0] g_event_queue_buffer_event_recv_time_V_address0;
output   g_event_queue_buffer_event_recv_time_V_ce0;
input  [31:0] g_event_queue_buffer_event_recv_time_V_q0;

reg ap_idle;
reg earliest_lp_V_1_out_ap_vld;
reg g_event_queue_buffer_event_recv_time_V_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1073_fu_124_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] icmp_ln1073_reg_252;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] trunc_ln1065_fu_136_p1;
reg   [1:0] trunc_ln1065_reg_256;
wire   [15:0] tmp_5_fu_140_p6;
reg   [15:0] tmp_5_reg_261;
wire   [63:0] zext_ln587_fu_154_p1;
wire    ap_block_pp0_stage0;
reg   [31:0] earliest_time_V_fu_50;
wire   [31:0] earliest_time_V_1_fu_205_p3;
wire    ap_loop_init;
reg   [15:0] earliest_lp_V_fu_54;
wire   [15:0] earliest_lp_V_2_fu_213_p3;
reg   [2:0] i_V_fu_58;
wire   [2:0] add_ln886_fu_130_p2;
reg   [2:0] ap_sig_allocacmp_i_V_1;
wire    ap_block_pp0_stage0_01001;
wire   [1:0] tmp_5_fu_140_p5;
wire   [0:0] icmp_ln1073_1_fu_180_p2;
wire   [15:0] zext_ln277_fu_194_p1;
wire   [0:0] icmp_ln1065_fu_175_p2;
wire   [31:0] select_ln277_fu_186_p3;
wire   [15:0] select_ln277_1_fu_197_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

event_queue_kernel_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U42(
    .din0(g_event_queue_lp_oldest_unissued_V_0_load_1),
    .din1(g_event_queue_lp_oldest_unissued_V_1_load_1),
    .din2(g_event_queue_lp_oldest_unissued_V_2_load_1),
    .din3(g_event_queue_lp_oldest_unissued_V_3_load_1),
    .din4(tmp_5_fu_140_p5),
    .dout(tmp_5_fu_140_p6)
);

event_queue_kernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            earliest_lp_V_fu_54 <= 16'd0;
        end else if (((icmp_ln1073_reg_252 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            earliest_lp_V_fu_54 <= earliest_lp_V_2_fu_213_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            earliest_time_V_fu_50 <= 32'd2147483647;
        end else if (((icmp_ln1073_reg_252 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            earliest_time_V_fu_50 <= earliest_time_V_1_fu_205_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1073_fu_124_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_V_fu_58 <= add_ln886_fu_130_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_V_fu_58 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1073_reg_252 <= icmp_ln1073_fu_124_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_fu_124_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_5_reg_261 <= tmp_5_fu_140_p6;
        trunc_ln1065_reg_256 <= trunc_ln1065_fu_136_p1;
    end
end

always @ (*) begin
    if (((icmp_ln1073_fu_124_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_V_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_V_1 = i_V_fu_58;
    end
end

always @ (*) begin
    if (((icmp_ln1073_reg_252 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        earliest_lp_V_1_out_ap_vld = 1'b1;
    end else begin
        earliest_lp_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        g_event_queue_buffer_event_recv_time_V_ce0 = 1'b1;
    end else begin
        g_event_queue_buffer_event_recv_time_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln886_fu_130_p2 = (ap_sig_allocacmp_i_V_1 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign earliest_lp_V_1_out = earliest_lp_V_fu_54[1:0];

assign earliest_lp_V_2_fu_213_p3 = ((icmp_ln1065_fu_175_p2[0:0] == 1'b1) ? earliest_lp_V_fu_54 : select_ln277_1_fu_197_p3);

assign earliest_time_V_1_fu_205_p3 = ((icmp_ln1065_fu_175_p2[0:0] == 1'b1) ? earliest_time_V_fu_50 : select_ln277_fu_186_p3);

assign g_event_queue_buffer_event_recv_time_V_address0 = zext_ln587_fu_154_p1;

assign icmp_ln1065_fu_175_p2 = ((tmp_5_reg_261 == 16'd65535) ? 1'b1 : 1'b0);

assign icmp_ln1073_1_fu_180_p2 = (($signed(earliest_time_V_fu_50) > $signed(g_event_queue_buffer_event_recv_time_V_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1073_fu_124_p2 = ((ap_sig_allocacmp_i_V_1 == 3'd4) ? 1'b1 : 1'b0);

assign select_ln277_1_fu_197_p3 = ((icmp_ln1073_1_fu_180_p2[0:0] == 1'b1) ? zext_ln277_fu_194_p1 : earliest_lp_V_fu_54);

assign select_ln277_fu_186_p3 = ((icmp_ln1073_1_fu_180_p2[0:0] == 1'b1) ? g_event_queue_buffer_event_recv_time_V_q0 : earliest_time_V_fu_50);

assign tmp_5_fu_140_p5 = ap_sig_allocacmp_i_V_1[1:0];

assign trunc_ln1065_fu_136_p1 = ap_sig_allocacmp_i_V_1[1:0];

assign zext_ln277_fu_194_p1 = trunc_ln1065_reg_256;

assign zext_ln587_fu_154_p1 = tmp_5_fu_140_p6;

endmodule //event_queue_kernel_event_queue_kernel_Pipeline_VITIS_LOOP_269_1
