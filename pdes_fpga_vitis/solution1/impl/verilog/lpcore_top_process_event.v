// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module lpcore_top_process_event (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read5,
        state_buffer_input_stream_din,
        state_buffer_input_stream_num_data_valid,
        state_buffer_input_stream_fifo_cap,
        state_buffer_input_stream_full_n,
        state_buffer_input_stream_write,
        output_event_stream_din,
        output_event_stream_full_n,
        output_event_stream_write,
        cancellation_unit_input_stream_din,
        cancellation_unit_input_stream_num_data_valid,
        cancellation_unit_input_stream_fifo_cap,
        cancellation_unit_input_stream_full_n,
        cancellation_unit_input_stream_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
input  [1:0] p_read1;
input  [0:0] p_read2;
input  [15:0] p_read3;
input  [31:0] p_read5;
output  [79:0] state_buffer_input_stream_din;
input  [1:0] state_buffer_input_stream_num_data_valid;
input  [1:0] state_buffer_input_stream_fifo_cap;
input   state_buffer_input_stream_full_n;
output   state_buffer_input_stream_write;
output  [128:0] output_event_stream_din;
input   output_event_stream_full_n;
output   output_event_stream_write;
output  [128:0] cancellation_unit_input_stream_din;
input  [1:0] cancellation_unit_input_stream_num_data_valid;
input  [1:0] cancellation_unit_input_stream_fifo_cap;
input   cancellation_unit_input_stream_full_n;
output   cancellation_unit_input_stream_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg state_buffer_input_stream_write;
reg output_event_stream_write;
reg cancellation_unit_input_stream_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] event_processor_prng_address0;
reg    event_processor_prng_ce0;
wire   [3:0] event_processor_prng_q0;
reg   [3:0] g_multi_prng_generators_state_V_address0;
reg    g_multi_prng_generators_state_V_ce0;
reg    g_multi_prng_generators_state_V_we0;
wire   [7:0] g_multi_prng_generators_state_V_d0;
wire   [7:0] g_multi_prng_generators_state_V_q0;
reg    state_buffer_input_stream_blk_n;
wire    ap_CS_fsm_state4;
wire   [0:0] p_read_3_read_fu_82_p2;
reg    output_event_stream_blk_n;
reg    cancellation_unit_input_stream_blk_n;
reg   [3:0] this_state_V_reg_340;
wire    ap_CS_fsm_state2;
wire   [0:0] rhs_fu_201_p2;
reg   [0:0] rhs_reg_345;
wire    ap_CS_fsm_state3;
wire   [6:0] trunc_ln1544_fu_207_p1;
reg   [6:0] trunc_ln1544_reg_351;
wire   [0:0] rhs_1_fu_239_p2;
reg   [0:0] rhs_1_reg_356;
wire   [63:0] zext_ln37_fu_147_p1;
wire   [63:0] zext_ln25_fu_152_p1;
reg    ap_block_state4;
wire   [128:0] zext_ln174_1_fu_307_p1;
wire   [0:0] tmp_fu_157_p3;
wire   [0:0] tmp_9_fu_173_p3;
wire   [0:0] tmp_7_fu_165_p3;
wire   [0:0] tmp_10_fu_181_p3;
wire   [0:0] xor_ln232_1_fu_195_p2;
wire   [0:0] xor_ln232_fu_189_p2;
wire   [0:0] tmp_11_fu_211_p3;
wire   [0:0] tmp_12_fu_219_p3;
wire   [0:0] xor_ln8_1_fu_233_p2;
wire   [0:0] xor_ln8_fu_227_p2;
wire   [5:0] trunc_ln1544_1_fu_245_p1;
wire   [7:0] ret_V_2_fu_268_p3;
wire   [31:0] zext_ln75_fu_274_p1;
wire   [31:0] new_event_recv_time_V_fu_278_p2;
wire   [81:0] tmp_1_fu_283_p6;
wire   [87:0] zext_ln174_fu_294_p1;
wire   [120:0] tmp_8_fu_298_p4;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
end

lpcore_top_process_event_event_processor_prng_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
event_processor_prng_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(event_processor_prng_address0),
    .ce0(event_processor_prng_ce0),
    .q0(event_processor_prng_q0)
);

lpcore_top_process_event_g_multi_prng_generators_state_V_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
g_multi_prng_generators_state_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(g_multi_prng_generators_state_V_address0),
    .ce0(g_multi_prng_generators_state_V_ce0),
    .we0(g_multi_prng_generators_state_V_we0),
    .d0(g_multi_prng_generators_state_V_d0),
    .q0(g_multi_prng_generators_state_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        rhs_1_reg_356 <= rhs_1_fu_239_p2;
        rhs_reg_345 <= rhs_fu_201_p2;
        trunc_ln1544_reg_351 <= trunc_ln1544_fu_207_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        this_state_V_reg_340 <= zext_ln25_fu_152_p1;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((((p_read2 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (output_event_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0)))) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | (~(((p_read2 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (output_event_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~(((p_read2 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (output_event_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((p_read2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        cancellation_unit_input_stream_blk_n = cancellation_unit_input_stream_full_n;
    end else begin
        cancellation_unit_input_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((p_read2 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (output_event_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0))) & (p_read2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        cancellation_unit_input_stream_write = 1'b1;
    end else begin
        cancellation_unit_input_stream_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        event_processor_prng_ce0 = 1'b1;
    end else begin
        event_processor_prng_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        g_multi_prng_generators_state_V_address0 = this_state_V_reg_340;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        g_multi_prng_generators_state_V_address0 = zext_ln25_fu_152_p1;
    end else begin
        g_multi_prng_generators_state_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        g_multi_prng_generators_state_V_ce0 = 1'b1;
    end else begin
        g_multi_prng_generators_state_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        g_multi_prng_generators_state_V_we0 = 1'b1;
    end else begin
        g_multi_prng_generators_state_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((p_read2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        output_event_stream_blk_n = output_event_stream_full_n;
    end else begin
        output_event_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((p_read2 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (output_event_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0))) & (p_read2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        output_event_stream_write = 1'b1;
    end else begin
        output_event_stream_write = 1'b0;
    end
end

always @ (*) begin
    if (((p_read2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        state_buffer_input_stream_blk_n = state_buffer_input_stream_full_n;
    end else begin
        state_buffer_input_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((p_read2 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (output_event_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0))) & (p_read2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        state_buffer_input_stream_write = 1'b1;
    end else begin
        state_buffer_input_stream_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (p_read_3_read_fu_82_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((ap_start == 1'b1) & (p_read2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((~(((p_read2 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (output_event_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state4 = (((p_read2 == 1'd0) & (cancellation_unit_input_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (output_event_stream_full_n == 1'b0)) | ((p_read2 == 1'd0) & (state_buffer_input_stream_full_n == 1'b0)));
end

assign cancellation_unit_input_stream_din = zext_ln174_1_fu_307_p1;

assign event_processor_prng_address0 = zext_ln37_fu_147_p1;

assign g_multi_prng_generators_state_V_d0 = {{{trunc_ln1544_1_fu_245_p1}, {rhs_fu_201_p2}}, {rhs_1_fu_239_p2}};

assign new_event_recv_time_V_fu_278_p2 = (zext_ln75_fu_274_p1 + p_read);

assign output_event_stream_din = zext_ln174_1_fu_307_p1;

assign p_read_3_read_fu_82_p2 = p_read2;

assign ret_V_2_fu_268_p3 = {{trunc_ln1544_reg_351}, {rhs_reg_345}};

assign rhs_1_fu_239_p2 = (xor_ln8_fu_227_p2 ^ xor_ln8_1_fu_233_p2);

assign rhs_fu_201_p2 = (xor_ln232_fu_189_p2 ^ xor_ln232_1_fu_195_p2);

assign state_buffer_input_stream_din = {{{p_read5}, {p_read}}, {p_read3}};

assign tmp_10_fu_181_p3 = g_multi_prng_generators_state_V_q0[32'd3];

assign tmp_11_fu_211_p3 = g_multi_prng_generators_state_V_q0[32'd6];

assign tmp_12_fu_219_p3 = g_multi_prng_generators_state_V_q0[32'd2];

assign tmp_1_fu_283_p6 = {{{{{rhs_reg_345}, {rhs_1_reg_356}}, {p_read3}}, {32'd0}}, {new_event_recv_time_V_fu_278_p2}};

assign tmp_7_fu_165_p3 = g_multi_prng_generators_state_V_q0[32'd5];

assign tmp_8_fu_298_p4 = {{{{1'd0}, {zext_ln174_fu_294_p1}}}, {p_read}};

assign tmp_9_fu_173_p3 = g_multi_prng_generators_state_V_q0[32'd4];

assign tmp_fu_157_p3 = g_multi_prng_generators_state_V_q0[32'd7];

assign trunc_ln1544_1_fu_245_p1 = g_multi_prng_generators_state_V_q0[5:0];

assign trunc_ln1544_fu_207_p1 = g_multi_prng_generators_state_V_q0[6:0];

assign xor_ln232_1_fu_195_p2 = (tmp_7_fu_165_p3 ^ tmp_10_fu_181_p3);

assign xor_ln232_fu_189_p2 = (tmp_fu_157_p3 ^ tmp_9_fu_173_p3);

assign xor_ln8_1_fu_233_p2 = (tmp_9_fu_173_p3 ^ tmp_10_fu_181_p3);

assign xor_ln8_fu_227_p2 = (tmp_12_fu_219_p3 ^ tmp_11_fu_211_p3);

assign zext_ln174_1_fu_307_p1 = tmp_8_fu_298_p4;

assign zext_ln174_fu_294_p1 = tmp_1_fu_283_p6;

assign zext_ln25_fu_152_p1 = event_processor_prng_q0;

assign zext_ln37_fu_147_p1 = p_read1;

assign zext_ln75_fu_274_p1 = ret_V_2_fu_268_p3;

endmodule //lpcore_top_process_event
