-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lpcore_top_cancellation_unit_top_0_Pipeline_VITIS_LOOP_93_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    current_V_17 : IN STD_LOGIC_VECTOR (15 downto 0);
    zext_ln1073 : IN STD_LOGIC_VECTOR (1 downto 0);
    tmp_10 : IN STD_LOGIC_VECTOR (31 downto 0);
    removed_V_6_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    removed_V_6_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    removed_V_6_out_o_ap_vld : OUT STD_LOGIC;
    cancellation_unit_buffer_next_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cancellation_unit_buffer_next_V_ce0 : OUT STD_LOGIC;
    cancellation_unit_buffer_next_V_we0 : OUT STD_LOGIC;
    cancellation_unit_buffer_next_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cancellation_unit_buffer_next_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    cancellation_unit_buffer_event_send_time_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cancellation_unit_buffer_event_send_time_V_ce0 : OUT STD_LOGIC;
    cancellation_unit_buffer_event_send_time_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cancellation_unit_free_head_V_i : IN STD_LOGIC_VECTOR (15 downto 0);
    cancellation_unit_free_head_V_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    cancellation_unit_free_head_V_o_ap_vld : OUT STD_LOGIC;
    cancellation_unit_lp_sizes_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    cancellation_unit_lp_sizes_V_ce0 : OUT STD_LOGIC;
    cancellation_unit_lp_sizes_V_we0 : OUT STD_LOGIC;
    cancellation_unit_lp_sizes_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cancellation_unit_lp_sizes_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    cancellation_unit_lp_heads_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    cancellation_unit_lp_heads_V_ce0 : OUT STD_LOGIC;
    cancellation_unit_lp_heads_V_we0 : OUT STD_LOGIC;
    cancellation_unit_lp_heads_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of lpcore_top_cancellation_unit_top_0_Pipeline_VITIS_LOOP_93_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln1069_fu_149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal current_V_reg_240 : STD_LOGIC_VECTOR (15 downto 0);
    signal cancellation_unit_lp_heads_V_addr_reg_246 : STD_LOGIC_VECTOR (1 downto 0);
    signal cancellation_unit_lp_sizes_V_addr_reg_251 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1069_reg_256 : STD_LOGIC_VECTOR (0 downto 0);
    signal cancellation_unit_buffer_next_V_addr_reg_260 : STD_LOGIC_VECTOR (5 downto 0);
    signal current_V_16_reg_270 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal icmp_ln1085_fu_161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1085_reg_275 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1073_cast_fu_130_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_13_fu_155_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_fu_175_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1065_fu_169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal removed_V_fu_184_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal current_V_14_fu_44 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_current_V : STD_LOGIC_VECTOR (15 downto 0);
    signal prev_V_fu_48 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component lpcore_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component lpcore_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    current_V_14_fu_44_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1))) then 
                current_V_14_fu_44 <= current_V_17;
            elsif (((icmp_ln1069_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                current_V_14_fu_44 <= current_V_16_reg_270;
            end if; 
        end if;
    end process;

    prev_V_fu_48_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1))) then 
                prev_V_fu_48 <= ap_const_lv16_FFFF;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1085_fu_161_p2 = ap_const_lv1_1))) then 
                prev_V_fu_48 <= current_V_reg_240;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1069_fu_149_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                cancellation_unit_buffer_next_V_addr_reg_260 <= zext_ln587_13_fu_155_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                cancellation_unit_lp_heads_V_addr_reg_246 <= zext_ln1073_cast_fu_130_p1(2 - 1 downto 0);
                cancellation_unit_lp_sizes_V_addr_reg_251 <= zext_ln1073_cast_fu_130_p1(2 - 1 downto 0);
                current_V_reg_240 <= ap_sig_allocacmp_current_V;
                icmp_ln1069_reg_256 <= icmp_ln1069_fu_149_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                current_V_16_reg_270 <= cancellation_unit_buffer_next_V_q0;
                icmp_ln1085_reg_275 <= icmp_ln1085_fu_161_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, icmp_ln1069_fu_149_p2, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln1069_fu_149_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, icmp_ln1069_fu_149_p2, ap_start_int)
    begin
        if (((icmp_ln1069_fu_149_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_current_V_assign_proc : process(ap_CS_fsm_state1, current_V_17, current_V_14_fu_44, ap_loop_init)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_current_V <= current_V_17;
        else 
            ap_sig_allocacmp_current_V <= current_V_14_fu_44;
        end if; 
    end process;

    cancellation_unit_buffer_event_send_time_V_address0 <= zext_ln587_13_fu_155_p1(6 - 1 downto 0);

    cancellation_unit_buffer_event_send_time_V_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            cancellation_unit_buffer_event_send_time_V_ce0 <= ap_const_logic_1;
        else 
            cancellation_unit_buffer_event_send_time_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cancellation_unit_buffer_next_V_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln1069_fu_149_p2, ap_CS_fsm_state3, icmp_ln1069_reg_256, cancellation_unit_buffer_next_V_addr_reg_260, ap_CS_fsm_state2, icmp_ln1085_fu_161_p2, icmp_ln1085_reg_275, zext_ln587_13_fu_155_p1, zext_ln587_fu_175_p1, icmp_ln1065_fu_169_p2)
    begin
        if (((icmp_ln1069_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1085_reg_275 = ap_const_lv1_0))) then 
            cancellation_unit_buffer_next_V_address0 <= cancellation_unit_buffer_next_V_addr_reg_260;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1065_fu_169_p2 = ap_const_lv1_0) and (icmp_ln1085_fu_161_p2 = ap_const_lv1_0))) then 
            cancellation_unit_buffer_next_V_address0 <= zext_ln587_fu_175_p1(6 - 1 downto 0);
        elsif (((icmp_ln1069_fu_149_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cancellation_unit_buffer_next_V_address0 <= zext_ln587_13_fu_155_p1(6 - 1 downto 0);
        else 
            cancellation_unit_buffer_next_V_address0 <= "XXXXXX";
        end if; 
    end process;


    cancellation_unit_buffer_next_V_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln1069_fu_149_p2, ap_CS_fsm_state3, icmp_ln1069_reg_256, ap_CS_fsm_state2, icmp_ln1085_fu_161_p2, icmp_ln1085_reg_275, icmp_ln1065_fu_169_p2, ap_start_int)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1065_fu_169_p2 = ap_const_lv1_0) and (icmp_ln1085_fu_161_p2 = ap_const_lv1_0)) or ((icmp_ln1069_fu_149_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((icmp_ln1069_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1085_reg_275 = ap_const_lv1_0)))) then 
            cancellation_unit_buffer_next_V_ce0 <= ap_const_logic_1;
        else 
            cancellation_unit_buffer_next_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cancellation_unit_buffer_next_V_d0_assign_proc : process(ap_CS_fsm_state3, cancellation_unit_buffer_next_V_q0, cancellation_unit_free_head_V_i, icmp_ln1069_reg_256, ap_CS_fsm_state2, icmp_ln1085_fu_161_p2, icmp_ln1085_reg_275, icmp_ln1065_fu_169_p2)
    begin
        if (((icmp_ln1069_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1085_reg_275 = ap_const_lv1_0))) then 
            cancellation_unit_buffer_next_V_d0 <= cancellation_unit_free_head_V_i;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1065_fu_169_p2 = ap_const_lv1_0) and (icmp_ln1085_fu_161_p2 = ap_const_lv1_0))) then 
            cancellation_unit_buffer_next_V_d0 <= cancellation_unit_buffer_next_V_q0;
        else 
            cancellation_unit_buffer_next_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    cancellation_unit_buffer_next_V_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln1069_reg_256, ap_CS_fsm_state2, icmp_ln1085_fu_161_p2, icmp_ln1085_reg_275, icmp_ln1065_fu_169_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1065_fu_169_p2 = ap_const_lv1_0) and (icmp_ln1085_fu_161_p2 = ap_const_lv1_0)) or ((icmp_ln1069_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1085_reg_275 = ap_const_lv1_0)))) then 
            cancellation_unit_buffer_next_V_we0 <= ap_const_logic_1;
        else 
            cancellation_unit_buffer_next_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cancellation_unit_free_head_V_o_assign_proc : process(ap_CS_fsm_state3, cancellation_unit_free_head_V_i, current_V_reg_240, icmp_ln1069_reg_256, icmp_ln1085_reg_275)
    begin
        if (((icmp_ln1069_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1085_reg_275 = ap_const_lv1_0))) then 
            cancellation_unit_free_head_V_o <= current_V_reg_240;
        else 
            cancellation_unit_free_head_V_o <= cancellation_unit_free_head_V_i;
        end if; 
    end process;


    cancellation_unit_free_head_V_o_ap_vld_assign_proc : process(ap_CS_fsm_state3, icmp_ln1069_reg_256, icmp_ln1085_reg_275)
    begin
        if (((icmp_ln1069_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1085_reg_275 = ap_const_lv1_0))) then 
            cancellation_unit_free_head_V_o_ap_vld <= ap_const_logic_1;
        else 
            cancellation_unit_free_head_V_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    cancellation_unit_lp_heads_V_address0 <= cancellation_unit_lp_heads_V_addr_reg_246;

    cancellation_unit_lp_heads_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cancellation_unit_lp_heads_V_ce0 <= ap_const_logic_1;
        else 
            cancellation_unit_lp_heads_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cancellation_unit_lp_heads_V_d0 <= cancellation_unit_buffer_next_V_q0;

    cancellation_unit_lp_heads_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln1085_fu_161_p2, icmp_ln1065_fu_169_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1065_fu_169_p2 = ap_const_lv1_1) and (icmp_ln1085_fu_161_p2 = ap_const_lv1_0))) then 
            cancellation_unit_lp_heads_V_we0 <= ap_const_logic_1;
        else 
            cancellation_unit_lp_heads_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cancellation_unit_lp_sizes_V_address0 <= cancellation_unit_lp_sizes_V_addr_reg_251;

    cancellation_unit_lp_sizes_V_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln1069_reg_256, ap_CS_fsm_state2, icmp_ln1085_fu_161_p2, icmp_ln1085_reg_275)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1085_fu_161_p2 = ap_const_lv1_0)) or ((icmp_ln1069_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1085_reg_275 = ap_const_lv1_0)))) then 
            cancellation_unit_lp_sizes_V_ce0 <= ap_const_logic_1;
        else 
            cancellation_unit_lp_sizes_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cancellation_unit_lp_sizes_V_d0 <= std_logic_vector(unsigned(cancellation_unit_lp_sizes_V_q0) + unsigned(ap_const_lv16_FFFF));

    cancellation_unit_lp_sizes_V_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln1069_reg_256, icmp_ln1085_reg_275)
    begin
        if (((icmp_ln1069_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1085_reg_275 = ap_const_lv1_0))) then 
            cancellation_unit_lp_sizes_V_we0 <= ap_const_logic_1;
        else 
            cancellation_unit_lp_sizes_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1065_fu_169_p2 <= "1" when (prev_V_fu_48 = ap_const_lv16_FFFF) else "0";
    icmp_ln1069_fu_149_p2 <= "1" when (ap_sig_allocacmp_current_V = ap_const_lv16_FFFF) else "0";
    icmp_ln1085_fu_161_p2 <= "1" when (signed(cancellation_unit_buffer_event_send_time_V_q0) > signed(tmp_10)) else "0";

    removed_V_6_out_o_assign_proc : process(removed_V_6_out_i, ap_CS_fsm_state2, icmp_ln1085_fu_161_p2, removed_V_fu_184_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1085_fu_161_p2 = ap_const_lv1_0))) then 
            removed_V_6_out_o <= removed_V_fu_184_p2;
        else 
            removed_V_6_out_o <= removed_V_6_out_i;
        end if; 
    end process;


    removed_V_6_out_o_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln1085_fu_161_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1085_fu_161_p2 = ap_const_lv1_0))) then 
            removed_V_6_out_o_ap_vld <= ap_const_logic_1;
        else 
            removed_V_6_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    removed_V_fu_184_p2 <= std_logic_vector(unsigned(removed_V_6_out_i) + unsigned(ap_const_lv16_1));
    zext_ln1073_cast_fu_130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1073),64));
    zext_ln587_13_fu_155_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_current_V),64));
    zext_ln587_fu_175_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(prev_V_fu_48),64));
end behav;
