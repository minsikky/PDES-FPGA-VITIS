-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity event_history_kernel_rollback is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    lp_id : IN STD_LOGIC_VECTOR (5 downto 0);
    to_time : IN STD_LOGIC_VECTOR (31 downto 0);
    history_lp_heads_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    history_lp_heads_V_ce0 : OUT STD_LOGIC;
    history_lp_heads_V_we0 : OUT STD_LOGIC;
    history_lp_heads_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    history_lp_heads_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    history_buffer_event_recv_time_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    history_buffer_event_recv_time_V_ce0 : OUT STD_LOGIC;
    history_buffer_event_recv_time_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    history_buffer_event_send_time_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    history_buffer_event_send_time_V_ce0 : OUT STD_LOGIC;
    history_buffer_event_send_time_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    history_buffer_event_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    history_buffer_event_data_V_ce0 : OUT STD_LOGIC;
    history_buffer_event_data_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    history_buffer_event_sender_id_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    history_buffer_event_sender_id_V_ce0 : OUT STD_LOGIC;
    history_buffer_event_sender_id_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    history_buffer_event_receiver_id_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    history_buffer_event_receiver_id_V_ce0 : OUT STD_LOGIC;
    history_buffer_event_receiver_id_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    history_buffer_event_is_anti_message_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    history_buffer_event_is_anti_message_V_ce0 : OUT STD_LOGIC;
    history_buffer_event_is_anti_message_V_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    history_buffer_next_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    history_buffer_next_V_ce0 : OUT STD_LOGIC;
    history_buffer_next_V_we0 : OUT STD_LOGIC;
    history_buffer_next_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    history_buffer_next_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    history_free_head_V_i : IN STD_LOGIC_VECTOR (15 downto 0);
    history_free_head_V_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    history_free_head_V_o_ap_vld : OUT STD_LOGIC;
    history_lp_sizes_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    history_lp_sizes_V_ce0 : OUT STD_LOGIC;
    history_lp_sizes_V_we0 : OUT STD_LOGIC;
    history_lp_sizes_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    history_lp_sizes_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    history_total_size_V_i : IN STD_LOGIC_VECTOR (15 downto 0);
    history_total_size_V_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    history_total_size_V_o_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of event_history_kernel_rollback is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal event_queue_size_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal event_queue_heap_send_time_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal event_queue_heap_send_time_V_ce0 : STD_LOGIC;
    signal event_queue_heap_send_time_V_we0 : STD_LOGIC;
    signal event_queue_heap_send_time_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal event_queue_heap_send_time_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal event_queue_heap_recv_time_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal event_queue_heap_recv_time_V_ce0 : STD_LOGIC;
    signal event_queue_heap_recv_time_V_we0 : STD_LOGIC;
    signal event_queue_heap_recv_time_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal event_queue_heap_recv_time_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal event_queue_heap_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal event_queue_heap_data_V_ce0 : STD_LOGIC;
    signal event_queue_heap_data_V_we0 : STD_LOGIC;
    signal event_queue_heap_data_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal event_queue_heap_data_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal event_queue_heap_sender_id_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal event_queue_heap_sender_id_V_ce0 : STD_LOGIC;
    signal event_queue_heap_sender_id_V_we0 : STD_LOGIC;
    signal event_queue_heap_sender_id_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal event_queue_heap_sender_id_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal event_queue_heap_receiver_id_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal event_queue_heap_receiver_id_V_ce0 : STD_LOGIC;
    signal event_queue_heap_receiver_id_V_we0 : STD_LOGIC;
    signal event_queue_heap_receiver_id_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal event_queue_heap_receiver_id_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal event_queue_heap_is_anti_message_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal event_queue_heap_is_anti_message_V_ce0 : STD_LOGIC;
    signal event_queue_heap_is_anti_message_V_we0 : STD_LOGIC;
    signal event_queue_heap_is_anti_message_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal event_queue_heap_is_anti_message_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal history_lp_heads_V_addr_reg_520 : STD_LOGIC_VECTOR (5 downto 0);
    signal history_lp_sizes_V_addr_reg_525 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln1069_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_reg_538 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln587_1_fu_393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_1_reg_542 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_recv_time_V_reg_557 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal index_V_reg_566 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1081_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1077_fu_407_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1077_reg_571 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_send_time_V_reg_609 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal temp_data_V_reg_614 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_sender_id_V_reg_619 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_receiver_id_V_reg_624 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_is_anti_message_V_reg_629 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal targetBlock_reg_634 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_start : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_done : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_idle : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_ready : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_1_out : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_1_out_ap_vld : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_3_out : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_3_out_ap_vld : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_ce0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_we0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_ce0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_we0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_ce0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_we0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_ce0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_we0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_ce0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_we0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_ce0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_we0 : STD_LOGIC;
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_0_reg_340 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal index_V_1_loc_fu_76 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_V_3_loc_fu_72 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln587_fu_373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_2_fu_457_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_3_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal add_ln886_fu_419_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln887_1_fu_445_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal current_V_1_fu_68 : STD_LOGIC_VECTOR (15 downto 0);
    signal index_V_4_fu_484_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_condition_281 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component event_history_kernel_rollback_Pipeline_VITIS_LOOP_35_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln1077 : IN STD_LOGIC_VECTOR (6 downto 0);
        temp_recv_time_V : IN STD_LOGIC_VECTOR (31 downto 0);
        index_V_1_out : OUT STD_LOGIC_VECTOR (6 downto 0);
        index_V_1_out_ap_vld : OUT STD_LOGIC;
        index_V_3_out : OUT STD_LOGIC_VECTOR (6 downto 0);
        index_V_3_out_ap_vld : OUT STD_LOGIC;
        event_queue_heap_recv_time_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        event_queue_heap_recv_time_V_ce0 : OUT STD_LOGIC;
        event_queue_heap_recv_time_V_we0 : OUT STD_LOGIC;
        event_queue_heap_recv_time_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        event_queue_heap_recv_time_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        event_queue_heap_send_time_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        event_queue_heap_send_time_V_ce0 : OUT STD_LOGIC;
        event_queue_heap_send_time_V_we0 : OUT STD_LOGIC;
        event_queue_heap_send_time_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        event_queue_heap_send_time_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        event_queue_heap_data_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        event_queue_heap_data_V_ce0 : OUT STD_LOGIC;
        event_queue_heap_data_V_we0 : OUT STD_LOGIC;
        event_queue_heap_data_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        event_queue_heap_data_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        event_queue_heap_sender_id_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        event_queue_heap_sender_id_V_ce0 : OUT STD_LOGIC;
        event_queue_heap_sender_id_V_we0 : OUT STD_LOGIC;
        event_queue_heap_sender_id_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        event_queue_heap_sender_id_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        event_queue_heap_receiver_id_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        event_queue_heap_receiver_id_V_ce0 : OUT STD_LOGIC;
        event_queue_heap_receiver_id_V_we0 : OUT STD_LOGIC;
        event_queue_heap_receiver_id_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        event_queue_heap_receiver_id_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        event_queue_heap_is_anti_message_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        event_queue_heap_is_anti_message_V_ce0 : OUT STD_LOGIC;
        event_queue_heap_is_anti_message_V_we0 : OUT STD_LOGIC;
        event_queue_heap_is_anti_message_V_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        event_queue_heap_is_anti_message_V_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component event_history_kernel_rollback_event_queue_heap_send_time_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component event_history_kernel_rollback_event_queue_heap_sender_id_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component event_history_kernel_rollback_event_queue_heap_is_anti_message_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    event_queue_heap_send_time_V_U : component event_history_kernel_rollback_event_queue_heap_send_time_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => event_queue_heap_send_time_V_address0,
        ce0 => event_queue_heap_send_time_V_ce0,
        we0 => event_queue_heap_send_time_V_we0,
        d0 => event_queue_heap_send_time_V_d0,
        q0 => event_queue_heap_send_time_V_q0);

    event_queue_heap_recv_time_V_U : component event_history_kernel_rollback_event_queue_heap_send_time_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => event_queue_heap_recv_time_V_address0,
        ce0 => event_queue_heap_recv_time_V_ce0,
        we0 => event_queue_heap_recv_time_V_we0,
        d0 => event_queue_heap_recv_time_V_d0,
        q0 => event_queue_heap_recv_time_V_q0);

    event_queue_heap_data_V_U : component event_history_kernel_rollback_event_queue_heap_send_time_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => event_queue_heap_data_V_address0,
        ce0 => event_queue_heap_data_V_ce0,
        we0 => event_queue_heap_data_V_we0,
        d0 => event_queue_heap_data_V_d0,
        q0 => event_queue_heap_data_V_q0);

    event_queue_heap_sender_id_V_U : component event_history_kernel_rollback_event_queue_heap_sender_id_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => event_queue_heap_sender_id_V_address0,
        ce0 => event_queue_heap_sender_id_V_ce0,
        we0 => event_queue_heap_sender_id_V_we0,
        d0 => event_queue_heap_sender_id_V_d0,
        q0 => event_queue_heap_sender_id_V_q0);

    event_queue_heap_receiver_id_V_U : component event_history_kernel_rollback_event_queue_heap_sender_id_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => event_queue_heap_receiver_id_V_address0,
        ce0 => event_queue_heap_receiver_id_V_ce0,
        we0 => event_queue_heap_receiver_id_V_we0,
        d0 => event_queue_heap_receiver_id_V_d0,
        q0 => event_queue_heap_receiver_id_V_q0);

    event_queue_heap_is_anti_message_V_U : component event_history_kernel_rollback_event_queue_heap_is_anti_message_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => event_queue_heap_is_anti_message_V_address0,
        ce0 => event_queue_heap_is_anti_message_V_ce0,
        we0 => event_queue_heap_is_anti_message_V_we0,
        d0 => event_queue_heap_is_anti_message_V_d0,
        q0 => event_queue_heap_is_anti_message_V_q0);

    grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353 : component event_history_kernel_rollback_Pipeline_VITIS_LOOP_35_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_start,
        ap_done => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_done,
        ap_idle => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_idle,
        ap_ready => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_ready,
        zext_ln1077 => trunc_ln1077_reg_571,
        temp_recv_time_V => temp_recv_time_V_reg_557,
        index_V_1_out => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_1_out,
        index_V_1_out_ap_vld => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_1_out_ap_vld,
        index_V_3_out => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_3_out,
        index_V_3_out_ap_vld => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_3_out_ap_vld,
        event_queue_heap_recv_time_V_address0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_address0,
        event_queue_heap_recv_time_V_ce0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_ce0,
        event_queue_heap_recv_time_V_we0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_we0,
        event_queue_heap_recv_time_V_d0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_d0,
        event_queue_heap_recv_time_V_q0 => event_queue_heap_recv_time_V_q0,
        event_queue_heap_send_time_V_address0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_address0,
        event_queue_heap_send_time_V_ce0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_ce0,
        event_queue_heap_send_time_V_we0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_we0,
        event_queue_heap_send_time_V_d0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_d0,
        event_queue_heap_send_time_V_q0 => event_queue_heap_send_time_V_q0,
        event_queue_heap_data_V_address0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_address0,
        event_queue_heap_data_V_ce0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_ce0,
        event_queue_heap_data_V_we0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_we0,
        event_queue_heap_data_V_d0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_d0,
        event_queue_heap_data_V_q0 => event_queue_heap_data_V_q0,
        event_queue_heap_sender_id_V_address0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_address0,
        event_queue_heap_sender_id_V_ce0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_ce0,
        event_queue_heap_sender_id_V_we0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_we0,
        event_queue_heap_sender_id_V_d0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_d0,
        event_queue_heap_sender_id_V_q0 => event_queue_heap_sender_id_V_q0,
        event_queue_heap_receiver_id_V_address0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_address0,
        event_queue_heap_receiver_id_V_ce0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_ce0,
        event_queue_heap_receiver_id_V_we0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_we0,
        event_queue_heap_receiver_id_V_d0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_d0,
        event_queue_heap_receiver_id_V_q0 => event_queue_heap_receiver_id_V_q0,
        event_queue_heap_is_anti_message_V_address0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_address0,
        event_queue_heap_is_anti_message_V_ce0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_ce0,
        event_queue_heap_is_anti_message_V_we0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_we0,
        event_queue_heap_is_anti_message_V_d0 => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_d0,
        event_queue_heap_is_anti_message_V_q0 => event_queue_heap_is_anti_message_V_q0,
        ap_return => grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_return_preg <= retval_0_reg_340;
                end if; 
            end if;
        end if;
    end process;


    grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_ready = ap_const_logic_1)) then 
                    grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    current_V_1_fu_68_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                current_V_1_fu_68 <= history_lp_heads_V_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                current_V_1_fu_68 <= history_buffer_next_V_q0;
            end if; 
        end if;
    end process;

    retval_0_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                if ((ap_const_boolean_1 = ap_condition_281)) then 
                    retval_0_reg_340 <= ap_const_lv1_0;
                elsif (((icmp_ln1081_fu_398_p2 = ap_const_lv1_0) or (icmp_ln1069_reg_538 = ap_const_lv1_1))) then 
                    retval_0_reg_340 <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_411_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1081_fu_398_p2 = ap_const_lv1_1) and (icmp_ln1069_reg_538 = ap_const_lv1_0))) then
                event_queue_size_V <= add_ln886_fu_419_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                history_lp_heads_V_addr_reg_520 <= zext_ln587_fu_373_p1(6 - 1 downto 0);
                history_lp_sizes_V_addr_reg_525 <= zext_ln587_fu_373_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln1069_reg_538 <= icmp_ln1069_fu_387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                index_V_1_loc_fu_76 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_3_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                index_V_3_loc_fu_72 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_index_V_3_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1081_fu_398_p2 = ap_const_lv1_1) and (icmp_ln1069_reg_538 = ap_const_lv1_0))) then
                index_V_reg_566 <= event_queue_size_V;
                trunc_ln1077_reg_571 <= trunc_ln1077_fu_407_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                targetBlock_reg_634 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                temp_data_V_reg_614 <= history_buffer_event_data_V_q0;
                temp_is_anti_message_V_reg_629 <= history_buffer_event_is_anti_message_V_q0;
                temp_receiver_id_V_reg_624 <= history_buffer_event_receiver_id_V_q0;
                temp_send_time_V_reg_609 <= history_buffer_event_send_time_V_q0;
                temp_sender_id_V_reg_619 <= history_buffer_event_sender_id_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1069_reg_538 = ap_const_lv1_0))) then
                temp_recv_time_V_reg_557 <= history_buffer_event_recv_time_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1069_fu_387_p2 = ap_const_lv1_0))) then
                    zext_ln587_1_reg_542(15 downto 0) <= zext_ln587_1_fu_393_p1(15 downto 0);
            end if;
        end if;
    end process;
    zext_ln587_1_reg_542(63 downto 16) <= "000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln1069_reg_538, ap_CS_fsm_state4, icmp_ln1081_fu_398_p2, tmp_fu_411_p3, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln1069_reg_538 = ap_const_lv1_1) or ((tmp_fu_411_p3 = ap_const_lv1_1) or (icmp_ln1081_fu_398_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln886_fu_419_p2 <= std_logic_vector(unsigned(event_queue_size_V) + unsigned(ap_const_lv8_1));
    add_ln887_1_fu_445_p2 <= std_logic_vector(unsigned(history_total_size_V_i) + unsigned(ap_const_lv16_FFFF));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_done)
    begin
        if ((grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_condition_281_assign_proc : process(icmp_ln1069_reg_538, icmp_ln1081_fu_398_p2, tmp_fu_411_p3)
    begin
                ap_condition_281 <= ((tmp_fu_411_p3 = ap_const_lv1_1) and (icmp_ln1081_fu_398_p2 = ap_const_lv1_1) and (icmp_ln1069_reg_538 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(retval_0_reg_340, ap_return_preg, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_return <= retval_0_reg_340;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    event_queue_heap_data_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_address0, zext_ln587_2_fu_457_p1, zext_ln587_3_fu_491_p1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            event_queue_heap_data_V_address0 <= zext_ln587_3_fu_491_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            event_queue_heap_data_V_address0 <= zext_ln587_2_fu_457_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_data_V_address0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_address0;
        else 
            event_queue_heap_data_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    event_queue_heap_data_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_ce0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_data_V_ce0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_ce0;
        else 
            event_queue_heap_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    event_queue_heap_data_V_d0_assign_proc : process(history_buffer_event_data_V_q0, ap_CS_fsm_state5, temp_data_V_reg_614, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            event_queue_heap_data_V_d0 <= temp_data_V_reg_614;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            event_queue_heap_data_V_d0 <= history_buffer_event_data_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_data_V_d0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_d0;
        else 
            event_queue_heap_data_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    event_queue_heap_data_V_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_we0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_data_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_data_V_we0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_data_V_we0;
        else 
            event_queue_heap_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    event_queue_heap_is_anti_message_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_address0, zext_ln587_2_fu_457_p1, zext_ln587_3_fu_491_p1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            event_queue_heap_is_anti_message_V_address0 <= zext_ln587_3_fu_491_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            event_queue_heap_is_anti_message_V_address0 <= zext_ln587_2_fu_457_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_is_anti_message_V_address0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_address0;
        else 
            event_queue_heap_is_anti_message_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    event_queue_heap_is_anti_message_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_ce0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_is_anti_message_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_is_anti_message_V_ce0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_ce0;
        else 
            event_queue_heap_is_anti_message_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    event_queue_heap_is_anti_message_V_d0_assign_proc : process(history_buffer_event_is_anti_message_V_q0, ap_CS_fsm_state5, temp_is_anti_message_V_reg_629, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            event_queue_heap_is_anti_message_V_d0 <= temp_is_anti_message_V_reg_629;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            event_queue_heap_is_anti_message_V_d0 <= history_buffer_event_is_anti_message_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_is_anti_message_V_d0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_d0;
        else 
            event_queue_heap_is_anti_message_V_d0 <= "X";
        end if; 
    end process;


    event_queue_heap_is_anti_message_V_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_we0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_is_anti_message_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_is_anti_message_V_we0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_is_anti_message_V_we0;
        else 
            event_queue_heap_is_anti_message_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    event_queue_heap_receiver_id_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_address0, zext_ln587_2_fu_457_p1, zext_ln587_3_fu_491_p1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            event_queue_heap_receiver_id_V_address0 <= zext_ln587_3_fu_491_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            event_queue_heap_receiver_id_V_address0 <= zext_ln587_2_fu_457_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_receiver_id_V_address0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_address0;
        else 
            event_queue_heap_receiver_id_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    event_queue_heap_receiver_id_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_ce0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_receiver_id_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_receiver_id_V_ce0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_ce0;
        else 
            event_queue_heap_receiver_id_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    event_queue_heap_receiver_id_V_d0_assign_proc : process(history_buffer_event_receiver_id_V_q0, ap_CS_fsm_state5, temp_receiver_id_V_reg_624, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            event_queue_heap_receiver_id_V_d0 <= temp_receiver_id_V_reg_624;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            event_queue_heap_receiver_id_V_d0 <= history_buffer_event_receiver_id_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_receiver_id_V_d0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_d0;
        else 
            event_queue_heap_receiver_id_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    event_queue_heap_receiver_id_V_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_we0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_receiver_id_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_receiver_id_V_we0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_receiver_id_V_we0;
        else 
            event_queue_heap_receiver_id_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    event_queue_heap_recv_time_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_address0, zext_ln587_2_fu_457_p1, zext_ln587_3_fu_491_p1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            event_queue_heap_recv_time_V_address0 <= zext_ln587_3_fu_491_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            event_queue_heap_recv_time_V_address0 <= zext_ln587_2_fu_457_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_recv_time_V_address0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_address0;
        else 
            event_queue_heap_recv_time_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    event_queue_heap_recv_time_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_ce0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_recv_time_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_recv_time_V_ce0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_ce0;
        else 
            event_queue_heap_recv_time_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    event_queue_heap_recv_time_V_d0_assign_proc : process(temp_recv_time_V_reg_557, ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_d0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_recv_time_V_d0 <= temp_recv_time_V_reg_557;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_recv_time_V_d0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_d0;
        else 
            event_queue_heap_recv_time_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    event_queue_heap_recv_time_V_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_we0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_recv_time_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_recv_time_V_we0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_recv_time_V_we0;
        else 
            event_queue_heap_recv_time_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    event_queue_heap_send_time_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_address0, zext_ln587_2_fu_457_p1, zext_ln587_3_fu_491_p1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            event_queue_heap_send_time_V_address0 <= zext_ln587_3_fu_491_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            event_queue_heap_send_time_V_address0 <= zext_ln587_2_fu_457_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_send_time_V_address0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_address0;
        else 
            event_queue_heap_send_time_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    event_queue_heap_send_time_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_ce0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_send_time_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_send_time_V_ce0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_ce0;
        else 
            event_queue_heap_send_time_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    event_queue_heap_send_time_V_d0_assign_proc : process(history_buffer_event_send_time_V_q0, temp_send_time_V_reg_609, ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            event_queue_heap_send_time_V_d0 <= temp_send_time_V_reg_609;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            event_queue_heap_send_time_V_d0 <= history_buffer_event_send_time_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_send_time_V_d0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_d0;
        else 
            event_queue_heap_send_time_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    event_queue_heap_send_time_V_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_we0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_send_time_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_send_time_V_we0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_send_time_V_we0;
        else 
            event_queue_heap_send_time_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    event_queue_heap_sender_id_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_address0, zext_ln587_2_fu_457_p1, zext_ln587_3_fu_491_p1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            event_queue_heap_sender_id_V_address0 <= zext_ln587_3_fu_491_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            event_queue_heap_sender_id_V_address0 <= zext_ln587_2_fu_457_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_sender_id_V_address0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_address0;
        else 
            event_queue_heap_sender_id_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    event_queue_heap_sender_id_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_ce0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_sender_id_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_sender_id_V_ce0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_ce0;
        else 
            event_queue_heap_sender_id_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    event_queue_heap_sender_id_V_d0_assign_proc : process(history_buffer_event_sender_id_V_q0, ap_CS_fsm_state5, temp_sender_id_V_reg_619, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            event_queue_heap_sender_id_V_d0 <= temp_sender_id_V_reg_619;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            event_queue_heap_sender_id_V_d0 <= history_buffer_event_sender_id_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_sender_id_V_d0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_d0;
        else 
            event_queue_heap_sender_id_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    event_queue_heap_sender_id_V_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_we0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            event_queue_heap_sender_id_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            event_queue_heap_sender_id_V_we0 <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_event_queue_heap_sender_id_V_we0;
        else 
            event_queue_heap_sender_id_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_start <= grp_rollback_Pipeline_VITIS_LOOP_35_1_fu_353_ap_start_reg;
    history_buffer_event_data_V_address0 <= zext_ln587_1_reg_542(6 - 1 downto 0);

    history_buffer_event_data_V_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            history_buffer_event_data_V_ce0 <= ap_const_logic_1;
        else 
            history_buffer_event_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    history_buffer_event_is_anti_message_V_address0 <= zext_ln587_1_reg_542(6 - 1 downto 0);

    history_buffer_event_is_anti_message_V_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            history_buffer_event_is_anti_message_V_ce0 <= ap_const_logic_1;
        else 
            history_buffer_event_is_anti_message_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    history_buffer_event_receiver_id_V_address0 <= zext_ln587_1_reg_542(6 - 1 downto 0);

    history_buffer_event_receiver_id_V_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            history_buffer_event_receiver_id_V_ce0 <= ap_const_logic_1;
        else 
            history_buffer_event_receiver_id_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    history_buffer_event_recv_time_V_address0 <= zext_ln587_1_fu_393_p1(6 - 1 downto 0);

    history_buffer_event_recv_time_V_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            history_buffer_event_recv_time_V_ce0 <= ap_const_logic_1;
        else 
            history_buffer_event_recv_time_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    history_buffer_event_send_time_V_address0 <= zext_ln587_1_reg_542(6 - 1 downto 0);

    history_buffer_event_send_time_V_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            history_buffer_event_send_time_V_ce0 <= ap_const_logic_1;
        else 
            history_buffer_event_send_time_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    history_buffer_event_sender_id_V_address0 <= zext_ln587_1_reg_542(6 - 1 downto 0);

    history_buffer_event_sender_id_V_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            history_buffer_event_sender_id_V_ce0 <= ap_const_logic_1;
        else 
            history_buffer_event_sender_id_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    history_buffer_next_V_address0 <= zext_ln587_1_reg_542(6 - 1 downto 0);

    history_buffer_next_V_ce0_assign_proc : process(icmp_ln1069_reg_538, ap_CS_fsm_state4, icmp_ln1081_fu_398_p2, tmp_fu_411_p3)
    begin
        if (((tmp_fu_411_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1081_fu_398_p2 = ap_const_lv1_1) and (icmp_ln1069_reg_538 = ap_const_lv1_0))) then 
            history_buffer_next_V_ce0 <= ap_const_logic_1;
        else 
            history_buffer_next_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    history_buffer_next_V_d0 <= history_free_head_V_i;

    history_buffer_next_V_we0_assign_proc : process(icmp_ln1069_reg_538, ap_CS_fsm_state4, icmp_ln1081_fu_398_p2, tmp_fu_411_p3)
    begin
        if (((tmp_fu_411_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1081_fu_398_p2 = ap_const_lv1_1) and (icmp_ln1069_reg_538 = ap_const_lv1_0))) then 
            history_buffer_next_V_we0 <= ap_const_logic_1;
        else 
            history_buffer_next_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    history_free_head_V_o_assign_proc : process(history_free_head_V_i, icmp_ln1069_reg_538, ap_CS_fsm_state4, icmp_ln1081_fu_398_p2, tmp_fu_411_p3, current_V_1_fu_68)
    begin
        if (((tmp_fu_411_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1081_fu_398_p2 = ap_const_lv1_1) and (icmp_ln1069_reg_538 = ap_const_lv1_0))) then 
            history_free_head_V_o <= current_V_1_fu_68;
        else 
            history_free_head_V_o <= history_free_head_V_i;
        end if; 
    end process;


    history_free_head_V_o_ap_vld_assign_proc : process(icmp_ln1069_reg_538, ap_CS_fsm_state4, icmp_ln1081_fu_398_p2, tmp_fu_411_p3)
    begin
        if (((tmp_fu_411_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1081_fu_398_p2 = ap_const_lv1_1) and (icmp_ln1069_reg_538 = ap_const_lv1_0))) then 
            history_free_head_V_o_ap_vld <= ap_const_logic_1;
        else 
            history_free_head_V_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    history_lp_heads_V_address0_assign_proc : process(ap_CS_fsm_state1, history_lp_heads_V_addr_reg_520, ap_CS_fsm_state5, zext_ln587_fu_373_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            history_lp_heads_V_address0 <= history_lp_heads_V_addr_reg_520;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            history_lp_heads_V_address0 <= zext_ln587_fu_373_p1(6 - 1 downto 0);
        else 
            history_lp_heads_V_address0 <= "XXXXXX";
        end if; 
    end process;


    history_lp_heads_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            history_lp_heads_V_ce0 <= ap_const_logic_1;
        else 
            history_lp_heads_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    history_lp_heads_V_d0 <= history_buffer_next_V_q0;

    history_lp_heads_V_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            history_lp_heads_V_we0 <= ap_const_logic_1;
        else 
            history_lp_heads_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    history_lp_sizes_V_address0 <= history_lp_sizes_V_addr_reg_525;

    history_lp_sizes_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            history_lp_sizes_V_ce0 <= ap_const_logic_1;
        else 
            history_lp_sizes_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    history_lp_sizes_V_d0 <= std_logic_vector(unsigned(history_lp_sizes_V_q0) + unsigned(ap_const_lv16_FFFF));

    history_lp_sizes_V_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            history_lp_sizes_V_we0 <= ap_const_logic_1;
        else 
            history_lp_sizes_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    history_total_size_V_o_assign_proc : process(history_total_size_V_i, icmp_ln1069_reg_538, ap_CS_fsm_state4, icmp_ln1081_fu_398_p2, tmp_fu_411_p3, add_ln887_1_fu_445_p2)
    begin
        if (((tmp_fu_411_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1081_fu_398_p2 = ap_const_lv1_1) and (icmp_ln1069_reg_538 = ap_const_lv1_0))) then 
            history_total_size_V_o <= add_ln887_1_fu_445_p2;
        else 
            history_total_size_V_o <= history_total_size_V_i;
        end if; 
    end process;


    history_total_size_V_o_ap_vld_assign_proc : process(icmp_ln1069_reg_538, ap_CS_fsm_state4, icmp_ln1081_fu_398_p2, tmp_fu_411_p3)
    begin
        if (((tmp_fu_411_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1081_fu_398_p2 = ap_const_lv1_1) and (icmp_ln1069_reg_538 = ap_const_lv1_0))) then 
            history_total_size_V_o_ap_vld <= ap_const_logic_1;
        else 
            history_total_size_V_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1069_fu_387_p2 <= "1" when (current_V_1_fu_68 = ap_const_lv16_FFFF) else "0";
    icmp_ln1081_fu_398_p2 <= "1" when (signed(history_buffer_event_recv_time_V_q0) > signed(to_time)) else "0";
    index_V_4_fu_484_p3 <= 
        index_V_1_loc_fu_76 when (targetBlock_reg_634(0) = '1') else 
        index_V_3_loc_fu_72;
    tmp_fu_411_p3 <= event_queue_size_V(7 downto 7);
    trunc_ln1077_fu_407_p1 <= event_queue_size_V(7 - 1 downto 0);
    zext_ln587_1_fu_393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(current_V_1_fu_68),64));
    zext_ln587_2_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_reg_566),64));
    zext_ln587_3_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_4_fu_484_p3),64));
    zext_ln587_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lp_id),64));
end behav;
