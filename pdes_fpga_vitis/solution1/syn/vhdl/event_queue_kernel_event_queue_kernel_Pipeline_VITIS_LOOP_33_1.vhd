-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity event_queue_kernel_event_queue_kernel_Pipeline_VITIS_LOOP_33_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    index_V : IN STD_LOGIC_VECTOR (6 downto 0);
    temp_recv_time_V : IN STD_LOGIC_VECTOR (31 downto 0);
    index_V_1_out : OUT STD_LOGIC_VECTOR (6 downto 0);
    index_V_1_out_ap_vld : OUT STD_LOGIC;
    index_V_4_out : OUT STD_LOGIC_VECTOR (6 downto 0);
    index_V_4_out_ap_vld : OUT STD_LOGIC;
    g_event_queue_heap_recv_time_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    g_event_queue_heap_recv_time_V_ce0 : OUT STD_LOGIC;
    g_event_queue_heap_recv_time_V_we0 : OUT STD_LOGIC;
    g_event_queue_heap_recv_time_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    g_event_queue_heap_recv_time_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    g_event_queue_heap_send_time_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    g_event_queue_heap_send_time_V_ce0 : OUT STD_LOGIC;
    g_event_queue_heap_send_time_V_we0 : OUT STD_LOGIC;
    g_event_queue_heap_send_time_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    g_event_queue_heap_send_time_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    g_event_queue_heap_data_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    g_event_queue_heap_data_V_ce0 : OUT STD_LOGIC;
    g_event_queue_heap_data_V_we0 : OUT STD_LOGIC;
    g_event_queue_heap_data_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    g_event_queue_heap_data_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    g_event_queue_heap_sender_id_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    g_event_queue_heap_sender_id_V_ce0 : OUT STD_LOGIC;
    g_event_queue_heap_sender_id_V_we0 : OUT STD_LOGIC;
    g_event_queue_heap_sender_id_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    g_event_queue_heap_sender_id_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    g_event_queue_heap_receiver_id_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    g_event_queue_heap_receiver_id_V_ce0 : OUT STD_LOGIC;
    g_event_queue_heap_receiver_id_V_we0 : OUT STD_LOGIC;
    g_event_queue_heap_receiver_id_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    g_event_queue_heap_receiver_id_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    g_event_queue_heap_is_anti_message_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    g_event_queue_heap_is_anti_message_V_ce0 : OUT STD_LOGIC;
    g_event_queue_heap_is_anti_message_V_we0 : OUT STD_LOGIC;
    g_event_queue_heap_is_anti_message_V_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    g_event_queue_heap_is_anti_message_V_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of event_queue_kernel_event_queue_kernel_Pipeline_VITIS_LOOP_33_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv25_1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal index_V_3_reg_424 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal empty_fu_275_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_reg_429 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln1065_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_reg_434 : STD_LOGIC_VECTOR (0 downto 0);
    signal parent_V_fu_335_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal parent_V_reg_438 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln587_2_fu_343_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_2_reg_443 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1073_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_457 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal zext_ln587_3_fu_362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_3_reg_461 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_cond_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln30_fu_400_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln30_reg_499 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_predicate_tran4to5_state3 : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_cleanup_dest_slot_0_i_i_phi_fu_238_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_cleanup_dest_slot_0_i_i_reg_235 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_UnifiedRetVal_phi_fu_250_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal UnifiedRetVal_reg_246 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal i_fu_68 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_fu_351_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_V_1_fu_72 : STD_LOGIC_VECTOR (15 downto 0);
    signal index_V_cast_fu_258_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1559_fu_285_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1559_fu_289_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1559_fu_303_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1559_1_fu_309_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_295_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1559_1_fu_319_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1559_2_fu_325_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_370_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal icmp_ln33_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_exit_tran_regpp0 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_250_p4;
                end if; 
            end if;
        end if;
    end process;


    UnifiedRetVal_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then 
                UnifiedRetVal_reg_246 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                UnifiedRetVal_reg_246 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    ap_exit_tran_regpp0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                if ((icmp_ln1065_reg_434 = ap_const_lv1_1)) then 
                    ap_exit_tran_regpp0(0) <= '1';
                elsif ((ap_predicate_tran4to5_state3 = ap_const_boolean_1)) then 
                    ap_exit_tran_regpp0(0) <= '0';
                end if;
            end if; 
        end if;
    end process;

    i_fu_68_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_68 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond_fu_386_p2 = ap_const_lv1_1) and (icmp_ln1065_reg_434 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                i_fu_68 <= i_2_fu_351_p2;
            end if; 
        end if;
    end process;

    index_V_1_fu_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                index_V_1_fu_72 <= index_V_cast_fu_258_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1073_fu_357_p2 = ap_const_lv1_1) and (icmp_ln1065_reg_434 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                index_V_1_fu_72 <= parent_V_reg_438;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                empty_reg_429 <= empty_fu_275_p1;
                icmp_ln1065_reg_434 <= icmp_ln1065_fu_279_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then
                icmp_ln1073_reg_457 <= icmp_ln1073_fu_357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                index_V_3_reg_424 <= index_V_1_fu_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1065_fu_279_p2 = ap_const_lv1_0))) then
                parent_V_reg_438 <= parent_V_fu_335_p3;
                    zext_ln587_2_reg_443(15 downto 0) <= zext_ln587_2_fu_343_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then
                trunc_ln30_reg_499 <= trunc_ln30_fu_400_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1073_fu_357_p2 = ap_const_lv1_1) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then
                    zext_ln587_3_reg_461(15 downto 0) <= zext_ln587_3_fu_362_p1(15 downto 0);
            end if;
        end if;
    end process;
    zext_ln587_2_reg_443(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    zext_ln587_3_reg_461(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    ap_exit_tran_regpp0(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_exit_tran_regpp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_exit_tran_regpp0 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_exit_tran_regpp0 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln1559_fu_289_p2 <= std_logic_vector(unsigned(zext_ln1559_fu_285_p1) + unsigned(ap_const_lv17_1FFFF));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_flush_enable_assign_proc : process(icmp_ln1065_reg_434, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_predicate_tran4to5_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and ((ap_predicate_tran4to5_state3 = ap_const_boolean_1) or (icmp_ln1065_reg_434 = ap_const_lv1_1)))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_UnifiedRetVal_phi_fu_250_p4_assign_proc : process(icmp_ln1065_reg_434, UnifiedRetVal_reg_246, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then 
            ap_phi_mux_UnifiedRetVal_phi_fu_250_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_UnifiedRetVal_phi_fu_250_p4 <= UnifiedRetVal_reg_246;
        end if; 
    end process;


    ap_phi_mux_cleanup_dest_slot_0_i_i_phi_fu_238_p4_assign_proc : process(icmp_ln1065_reg_434, icmp_ln1073_fu_357_p2, ap_phi_reg_pp0_iter0_cleanup_dest_slot_0_i_i_reg_235)
    begin
        if ((icmp_ln1065_reg_434 = ap_const_lv1_0)) then
            if ((icmp_ln1073_fu_357_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_cleanup_dest_slot_0_i_i_phi_fu_238_p4 <= ap_const_lv1_0;
            elsif ((icmp_ln1073_fu_357_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_cleanup_dest_slot_0_i_i_phi_fu_238_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_cleanup_dest_slot_0_i_i_phi_fu_238_p4 <= ap_phi_reg_pp0_iter0_cleanup_dest_slot_0_i_i_reg_235;
            end if;
        else 
            ap_phi_mux_cleanup_dest_slot_0_i_i_phi_fu_238_p4 <= ap_phi_reg_pp0_iter0_cleanup_dest_slot_0_i_i_reg_235;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_cleanup_dest_slot_0_i_i_reg_235 <= "X";

    ap_predicate_tran4to5_state3_assign_proc : process(icmp_ln1065_reg_434, or_cond_fu_386_p2)
    begin
                ap_predicate_tran4to5_state3 <= ((or_cond_fu_386_p2 = ap_const_lv1_0) and (icmp_ln1065_reg_434 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_UnifiedRetVal_phi_fu_250_p4, ap_CS_fsm_state5, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_return <= ap_phi_mux_UnifiedRetVal_phi_fu_250_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    empty_fu_275_p1 <= index_V_1_fu_72(7 - 1 downto 0);

    g_event_queue_heap_data_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln587_2_reg_443, ap_CS_fsm_pp0_stage1, zext_ln587_3_reg_461, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            g_event_queue_heap_data_V_address0 <= zext_ln587_3_reg_461(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            g_event_queue_heap_data_V_address0 <= zext_ln587_2_reg_443(7 - 1 downto 0);
        else 
            g_event_queue_heap_data_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    g_event_queue_heap_data_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            g_event_queue_heap_data_V_ce0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    g_event_queue_heap_data_V_d0 <= g_event_queue_heap_data_V_q0;

    g_event_queue_heap_data_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_reg_434, icmp_ln1073_reg_457, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1073_reg_457 = ap_const_lv1_1) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then 
            g_event_queue_heap_data_V_we0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g_event_queue_heap_is_anti_message_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln587_2_reg_443, ap_CS_fsm_pp0_stage1, zext_ln587_3_reg_461, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            g_event_queue_heap_is_anti_message_V_address0 <= zext_ln587_3_reg_461(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            g_event_queue_heap_is_anti_message_V_address0 <= zext_ln587_2_reg_443(7 - 1 downto 0);
        else 
            g_event_queue_heap_is_anti_message_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    g_event_queue_heap_is_anti_message_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            g_event_queue_heap_is_anti_message_V_ce0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_is_anti_message_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    g_event_queue_heap_is_anti_message_V_d0 <= g_event_queue_heap_is_anti_message_V_q0;

    g_event_queue_heap_is_anti_message_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_reg_434, icmp_ln1073_reg_457, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1073_reg_457 = ap_const_lv1_1) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then 
            g_event_queue_heap_is_anti_message_V_we0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_is_anti_message_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g_event_queue_heap_receiver_id_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln587_2_reg_443, ap_CS_fsm_pp0_stage1, zext_ln587_3_reg_461, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            g_event_queue_heap_receiver_id_V_address0 <= zext_ln587_3_reg_461(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            g_event_queue_heap_receiver_id_V_address0 <= zext_ln587_2_reg_443(7 - 1 downto 0);
        else 
            g_event_queue_heap_receiver_id_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    g_event_queue_heap_receiver_id_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            g_event_queue_heap_receiver_id_V_ce0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_receiver_id_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    g_event_queue_heap_receiver_id_V_d0 <= g_event_queue_heap_receiver_id_V_q0;

    g_event_queue_heap_receiver_id_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_reg_434, icmp_ln1073_reg_457, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1073_reg_457 = ap_const_lv1_1) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then 
            g_event_queue_heap_receiver_id_V_we0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_receiver_id_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g_event_queue_heap_recv_time_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln587_2_fu_343_p1, ap_CS_fsm_pp0_stage1, zext_ln587_3_fu_362_p1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                g_event_queue_heap_recv_time_V_address0 <= zext_ln587_3_fu_362_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                g_event_queue_heap_recv_time_V_address0 <= zext_ln587_2_fu_343_p1(7 - 1 downto 0);
            else 
                g_event_queue_heap_recv_time_V_address0 <= "XXXXXXX";
            end if;
        else 
            g_event_queue_heap_recv_time_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    g_event_queue_heap_recv_time_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            g_event_queue_heap_recv_time_V_ce0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_recv_time_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    g_event_queue_heap_recv_time_V_d0 <= g_event_queue_heap_recv_time_V_q0;

    g_event_queue_heap_recv_time_V_we0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln1065_reg_434, icmp_ln1073_fu_357_p2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1073_fu_357_p2 = ap_const_lv1_1) and (icmp_ln1065_reg_434 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            g_event_queue_heap_recv_time_V_we0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_recv_time_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g_event_queue_heap_send_time_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln587_2_reg_443, ap_CS_fsm_pp0_stage1, zext_ln587_3_reg_461, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            g_event_queue_heap_send_time_V_address0 <= zext_ln587_3_reg_461(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            g_event_queue_heap_send_time_V_address0 <= zext_ln587_2_reg_443(7 - 1 downto 0);
        else 
            g_event_queue_heap_send_time_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    g_event_queue_heap_send_time_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            g_event_queue_heap_send_time_V_ce0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_send_time_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    g_event_queue_heap_send_time_V_d0 <= g_event_queue_heap_send_time_V_q0;

    g_event_queue_heap_send_time_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_reg_434, icmp_ln1073_reg_457, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1073_reg_457 = ap_const_lv1_1) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then 
            g_event_queue_heap_send_time_V_we0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_send_time_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g_event_queue_heap_sender_id_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln587_2_reg_443, ap_CS_fsm_pp0_stage1, zext_ln587_3_reg_461, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            g_event_queue_heap_sender_id_V_address0 <= zext_ln587_3_reg_461(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            g_event_queue_heap_sender_id_V_address0 <= zext_ln587_2_reg_443(7 - 1 downto 0);
        else 
            g_event_queue_heap_sender_id_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    g_event_queue_heap_sender_id_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            g_event_queue_heap_sender_id_V_ce0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_sender_id_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    g_event_queue_heap_sender_id_V_d0 <= g_event_queue_heap_sender_id_V_q0;

    g_event_queue_heap_sender_id_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_reg_434, icmp_ln1073_reg_457, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1073_reg_457 = ap_const_lv1_1) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then 
            g_event_queue_heap_sender_id_V_we0 <= ap_const_logic_1;
        else 
            g_event_queue_heap_sender_id_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_2_fu_351_p2 <= std_logic_vector(unsigned(i_fu_68) + unsigned(ap_const_lv32_1));
    icmp_ln1065_fu_279_p2 <= "1" when (index_V_1_fu_72 = ap_const_lv16_0) else "0";
    icmp_ln1073_fu_357_p2 <= "1" when (signed(temp_recv_time_V) < signed(g_event_queue_heap_recv_time_V_q0)) else "0";
    icmp_ln33_fu_380_p2 <= "1" when (signed(tmp_1_fu_370_p4) < signed(ap_const_lv25_1)) else "0";

    index_V_1_out_assign_proc : process(empty_reg_429, icmp_ln1065_reg_434, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            index_V_1_out <= ap_const_lv7_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then 
            index_V_1_out <= empty_reg_429;
        else 
            index_V_1_out <= "XXXXXXX";
        end if; 
    end process;


    index_V_1_out_ap_vld_assign_proc : process(icmp_ln1065_reg_434, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln1065_reg_434 = ap_const_lv1_0)))) then 
            index_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            index_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    index_V_4_out <= trunc_ln30_reg_499;

    index_V_4_out_ap_vld_assign_proc : process(icmp_ln1065_reg_434, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln1065_reg_434 = ap_const_lv1_0))) then 
            index_V_4_out_ap_vld <= ap_const_logic_1;
        else 
            index_V_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    index_V_cast_fu_258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V),16));
    or_cond_fu_386_p2 <= (icmp_ln33_fu_380_p2 and ap_phi_mux_cleanup_dest_slot_0_i_i_phi_fu_238_p4);
    parent_V_fu_335_p3 <= 
        sub_ln1559_1_fu_319_p2 when (tmp_fu_295_p3(0) = '1') else 
        trunc_ln1559_2_fu_325_p4;
    sub_ln1559_1_fu_319_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1559_1_fu_309_p4));
    sub_ln1559_fu_303_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) - unsigned(zext_ln1559_fu_285_p1));
    tmp_1_fu_370_p4 <= i_2_fu_351_p2(31 downto 7);
    tmp_fu_295_p3 <= add_ln1559_fu_289_p2(16 downto 16);
    trunc_ln1559_1_fu_309_p4 <= sub_ln1559_fu_303_p2(16 downto 1);
    trunc_ln1559_2_fu_325_p4 <= add_ln1559_fu_289_p2(16 downto 1);
    trunc_ln30_fu_400_p1 <= index_V_1_fu_72(7 - 1 downto 0);
    zext_ln1559_fu_285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_1_fu_72),17));
    zext_ln587_2_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(parent_V_fu_335_p3),64));
    zext_ln587_3_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_3_reg_424),64));
end behav;
