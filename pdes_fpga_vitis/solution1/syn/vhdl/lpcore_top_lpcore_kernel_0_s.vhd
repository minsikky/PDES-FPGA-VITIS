-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lpcore_top_lpcore_kernel_0_s is
port (
    init_event_stream_dout : IN STD_LOGIC_VECTOR (128 downto 0);
    init_event_stream_empty_n : IN STD_LOGIC;
    init_event_stream_read : OUT STD_LOGIC;
    event_queue_full_stream_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    event_queue_full_stream_full_n : IN STD_LOGIC;
    event_queue_full_stream_write : OUT STD_LOGIC;
    anti_message_stream_dout : IN STD_LOGIC_VECTOR (128 downto 0);
    anti_message_stream_empty_n : IN STD_LOGIC;
    anti_message_stream_read : OUT STD_LOGIC;
    enqueue_event_stream_dout : IN STD_LOGIC_VECTOR (128 downto 0);
    enqueue_event_stream_empty_n : IN STD_LOGIC;
    enqueue_event_stream_read : OUT STD_LOGIC;
    output_event_stream_din : OUT STD_LOGIC_VECTOR (128 downto 0);
    output_event_stream_full_n : IN STD_LOGIC;
    output_event_stream_write : OUT STD_LOGIC;
    cancellation_unit_output_stream_din : OUT STD_LOGIC_VECTOR (128 downto 0);
    cancellation_unit_output_stream_full_n : IN STD_LOGIC;
    cancellation_unit_output_stream_write : OUT STD_LOGIC;
    commit_time_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    commit_time_stream_empty_n : IN STD_LOGIC;
    commit_time_stream_read : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of lpcore_top_lpcore_kernel_0_s is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal event_queue_top_0_U0_ap_start : STD_LOGIC;
    signal event_queue_top_0_U0_ap_done : STD_LOGIC;
    signal event_queue_top_0_U0_ap_continue : STD_LOGIC;
    signal event_queue_top_0_U0_ap_idle : STD_LOGIC;
    signal event_queue_top_0_U0_ap_ready : STD_LOGIC;
    signal event_queue_top_0_U0_init_event_stream_read : STD_LOGIC;
    signal event_queue_top_0_U0_event_queue_full_stream_din : STD_LOGIC_VECTOR (0 downto 0);
    signal event_queue_top_0_U0_event_queue_full_stream_write : STD_LOGIC;
    signal event_queue_top_0_U0_event_queue_rollback_info_stream_read : STD_LOGIC;
    signal event_queue_top_0_U0_anti_message_stream_read : STD_LOGIC;
    signal event_queue_top_0_U0_enqueue_event_stream_read : STD_LOGIC;
    signal event_queue_top_0_U0_commit_time_stream_read : STD_LOGIC;
    signal event_queue_top_0_U0_issued_event_stream_din : STD_LOGIC_VECTOR (128 downto 0);
    signal event_queue_top_0_U0_issued_event_stream_write : STD_LOGIC;
    signal event_queue_top_0_U0_causality_violation_stream_din : STD_LOGIC_VECTOR (47 downto 0);
    signal event_queue_top_0_U0_causality_violation_stream_write : STD_LOGIC;
    signal state_buffer_top_0_U0_ap_start : STD_LOGIC;
    signal state_buffer_top_0_U0_ap_done : STD_LOGIC;
    signal state_buffer_top_0_U0_ap_continue : STD_LOGIC;
    signal state_buffer_top_0_U0_ap_idle : STD_LOGIC;
    signal state_buffer_top_0_U0_ap_ready : STD_LOGIC;
    signal state_buffer_top_0_U0_state_buffer_rollback_info_stream_read : STD_LOGIC;
    signal state_buffer_top_0_U0_state_buffer_input_stream_read : STD_LOGIC;
    signal state_buffer_top_0_U0_issued_event_stream_read : STD_LOGIC;
    signal state_buffer_top_0_U0_event_processor_input_stream_din : STD_LOGIC_VECTOR (208 downto 0);
    signal state_buffer_top_0_U0_event_processor_input_stream_write : STD_LOGIC;
    signal ap_sync_reg_state_buffer_top_0_U0_ap_start : STD_LOGIC := '0';
    signal event_processor_top_0_U0_ap_start : STD_LOGIC;
    signal event_processor_top_0_U0_ap_done : STD_LOGIC;
    signal event_processor_top_0_U0_ap_continue : STD_LOGIC;
    signal event_processor_top_0_U0_ap_idle : STD_LOGIC;
    signal event_processor_top_0_U0_ap_ready : STD_LOGIC;
    signal event_processor_top_0_U0_event_processor_input_stream_read : STD_LOGIC;
    signal event_processor_top_0_U0_state_buffer_input_stream_din : STD_LOGIC_VECTOR (79 downto 0);
    signal event_processor_top_0_U0_state_buffer_input_stream_write : STD_LOGIC;
    signal event_processor_top_0_U0_output_event_stream_din : STD_LOGIC_VECTOR (128 downto 0);
    signal event_processor_top_0_U0_output_event_stream_write : STD_LOGIC;
    signal event_processor_top_0_U0_cancellation_unit_input_stream_din : STD_LOGIC_VECTOR (128 downto 0);
    signal event_processor_top_0_U0_cancellation_unit_input_stream_write : STD_LOGIC;
    signal ap_sync_reg_event_processor_top_0_U0_ap_start : STD_LOGIC := '0';
    signal cancellation_unit_top_0_U0_ap_start : STD_LOGIC;
    signal cancellation_unit_top_0_U0_ap_done : STD_LOGIC;
    signal cancellation_unit_top_0_U0_ap_continue : STD_LOGIC;
    signal cancellation_unit_top_0_U0_ap_idle : STD_LOGIC;
    signal cancellation_unit_top_0_U0_ap_ready : STD_LOGIC;
    signal cancellation_unit_top_0_U0_cancellation_unit_rollback_info_stream_read : STD_LOGIC;
    signal cancellation_unit_top_0_U0_cancellation_unit_input_stream_read : STD_LOGIC;
    signal cancellation_unit_top_0_U0_cancellation_unit_output_stream_din : STD_LOGIC_VECTOR (128 downto 0);
    signal cancellation_unit_top_0_U0_cancellation_unit_output_stream_write : STD_LOGIC;
    signal ap_sync_reg_cancellation_unit_top_0_U0_ap_start : STD_LOGIC := '0';
    signal ap_sync_continue : STD_LOGIC;
    signal rollback_control_top_U0_ap_start : STD_LOGIC;
    signal rollback_control_top_U0_ap_done : STD_LOGIC;
    signal rollback_control_top_U0_ap_continue : STD_LOGIC;
    signal rollback_control_top_U0_ap_idle : STD_LOGIC;
    signal rollback_control_top_U0_ap_ready : STD_LOGIC;
    signal rollback_control_top_U0_causality_violation_stream_read : STD_LOGIC;
    signal rollback_control_top_U0_event_queue_rollback_info_stream_din : STD_LOGIC_VECTOR (47 downto 0);
    signal rollback_control_top_U0_event_queue_rollback_info_stream_write : STD_LOGIC;
    signal rollback_control_top_U0_state_buffer_rollback_info_stream_din : STD_LOGIC_VECTOR (47 downto 0);
    signal rollback_control_top_U0_state_buffer_rollback_info_stream_write : STD_LOGIC;
    signal rollback_control_top_U0_cancellation_unit_rollback_info_stream_din : STD_LOGIC_VECTOR (47 downto 0);
    signal rollback_control_top_U0_cancellation_unit_rollback_info_stream_write : STD_LOGIC;
    signal ap_sync_reg_rollback_control_top_U0_ap_start : STD_LOGIC := '0';
    signal event_queue_rollback_info_stream_full_n : STD_LOGIC;
    signal event_queue_rollback_info_stream_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal event_queue_rollback_info_stream_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal event_queue_rollback_info_stream_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal event_queue_rollback_info_stream_empty_n : STD_LOGIC;
    signal issued_event_stream_full_n : STD_LOGIC;
    signal issued_event_stream_dout : STD_LOGIC_VECTOR (128 downto 0);
    signal issued_event_stream_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal issued_event_stream_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal issued_event_stream_empty_n : STD_LOGIC;
    signal causality_violation_stream_full_n : STD_LOGIC;
    signal causality_violation_stream_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal causality_violation_stream_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal causality_violation_stream_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal causality_violation_stream_empty_n : STD_LOGIC;
    signal state_buffer_rollback_info_stream_full_n : STD_LOGIC;
    signal state_buffer_rollback_info_stream_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal state_buffer_rollback_info_stream_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal state_buffer_rollback_info_stream_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal state_buffer_rollback_info_stream_empty_n : STD_LOGIC;
    signal state_buffer_input_stream_full_n : STD_LOGIC;
    signal state_buffer_input_stream_dout : STD_LOGIC_VECTOR (79 downto 0);
    signal state_buffer_input_stream_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal state_buffer_input_stream_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal state_buffer_input_stream_empty_n : STD_LOGIC;
    signal event_processor_input_stream_full_n : STD_LOGIC;
    signal event_processor_input_stream_dout : STD_LOGIC_VECTOR (208 downto 0);
    signal event_processor_input_stream_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal event_processor_input_stream_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal event_processor_input_stream_empty_n : STD_LOGIC;
    signal cancellation_unit_input_stream_full_n : STD_LOGIC;
    signal cancellation_unit_input_stream_dout : STD_LOGIC_VECTOR (128 downto 0);
    signal cancellation_unit_input_stream_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal cancellation_unit_input_stream_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal cancellation_unit_input_stream_empty_n : STD_LOGIC;
    signal cancellation_unit_rollback_info_stream_full_n : STD_LOGIC;
    signal cancellation_unit_rollback_info_stream_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal cancellation_unit_rollback_info_stream_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal cancellation_unit_rollback_info_stream_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal cancellation_unit_rollback_info_stream_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component lpcore_top_event_queue_top_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        init_event_stream_dout : IN STD_LOGIC_VECTOR (128 downto 0);
        init_event_stream_empty_n : IN STD_LOGIC;
        init_event_stream_read : OUT STD_LOGIC;
        event_queue_full_stream_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        event_queue_full_stream_full_n : IN STD_LOGIC;
        event_queue_full_stream_write : OUT STD_LOGIC;
        event_queue_rollback_info_stream_dout : IN STD_LOGIC_VECTOR (47 downto 0);
        event_queue_rollback_info_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        event_queue_rollback_info_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        event_queue_rollback_info_stream_empty_n : IN STD_LOGIC;
        event_queue_rollback_info_stream_read : OUT STD_LOGIC;
        anti_message_stream_dout : IN STD_LOGIC_VECTOR (128 downto 0);
        anti_message_stream_empty_n : IN STD_LOGIC;
        anti_message_stream_read : OUT STD_LOGIC;
        enqueue_event_stream_dout : IN STD_LOGIC_VECTOR (128 downto 0);
        enqueue_event_stream_empty_n : IN STD_LOGIC;
        enqueue_event_stream_read : OUT STD_LOGIC;
        commit_time_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        commit_time_stream_empty_n : IN STD_LOGIC;
        commit_time_stream_read : OUT STD_LOGIC;
        issued_event_stream_din : OUT STD_LOGIC_VECTOR (128 downto 0);
        issued_event_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        issued_event_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        issued_event_stream_full_n : IN STD_LOGIC;
        issued_event_stream_write : OUT STD_LOGIC;
        causality_violation_stream_din : OUT STD_LOGIC_VECTOR (47 downto 0);
        causality_violation_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        causality_violation_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        causality_violation_stream_full_n : IN STD_LOGIC;
        causality_violation_stream_write : OUT STD_LOGIC );
    end component;


    component lpcore_top_state_buffer_top_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_buffer_rollback_info_stream_dout : IN STD_LOGIC_VECTOR (47 downto 0);
        state_buffer_rollback_info_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        state_buffer_rollback_info_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        state_buffer_rollback_info_stream_empty_n : IN STD_LOGIC;
        state_buffer_rollback_info_stream_read : OUT STD_LOGIC;
        state_buffer_input_stream_dout : IN STD_LOGIC_VECTOR (79 downto 0);
        state_buffer_input_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        state_buffer_input_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        state_buffer_input_stream_empty_n : IN STD_LOGIC;
        state_buffer_input_stream_read : OUT STD_LOGIC;
        issued_event_stream_dout : IN STD_LOGIC_VECTOR (128 downto 0);
        issued_event_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        issued_event_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        issued_event_stream_empty_n : IN STD_LOGIC;
        issued_event_stream_read : OUT STD_LOGIC;
        event_processor_input_stream_din : OUT STD_LOGIC_VECTOR (208 downto 0);
        event_processor_input_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        event_processor_input_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        event_processor_input_stream_full_n : IN STD_LOGIC;
        event_processor_input_stream_write : OUT STD_LOGIC );
    end component;


    component lpcore_top_event_processor_top_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        event_processor_input_stream_dout : IN STD_LOGIC_VECTOR (208 downto 0);
        event_processor_input_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        event_processor_input_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        event_processor_input_stream_empty_n : IN STD_LOGIC;
        event_processor_input_stream_read : OUT STD_LOGIC;
        state_buffer_input_stream_din : OUT STD_LOGIC_VECTOR (79 downto 0);
        state_buffer_input_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        state_buffer_input_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        state_buffer_input_stream_full_n : IN STD_LOGIC;
        state_buffer_input_stream_write : OUT STD_LOGIC;
        output_event_stream_din : OUT STD_LOGIC_VECTOR (128 downto 0);
        output_event_stream_full_n : IN STD_LOGIC;
        output_event_stream_write : OUT STD_LOGIC;
        cancellation_unit_input_stream_din : OUT STD_LOGIC_VECTOR (128 downto 0);
        cancellation_unit_input_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        cancellation_unit_input_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        cancellation_unit_input_stream_full_n : IN STD_LOGIC;
        cancellation_unit_input_stream_write : OUT STD_LOGIC );
    end component;


    component lpcore_top_cancellation_unit_top_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cancellation_unit_rollback_info_stream_dout : IN STD_LOGIC_VECTOR (47 downto 0);
        cancellation_unit_rollback_info_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        cancellation_unit_rollback_info_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        cancellation_unit_rollback_info_stream_empty_n : IN STD_LOGIC;
        cancellation_unit_rollback_info_stream_read : OUT STD_LOGIC;
        cancellation_unit_input_stream_dout : IN STD_LOGIC_VECTOR (128 downto 0);
        cancellation_unit_input_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        cancellation_unit_input_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        cancellation_unit_input_stream_empty_n : IN STD_LOGIC;
        cancellation_unit_input_stream_read : OUT STD_LOGIC;
        cancellation_unit_output_stream_din : OUT STD_LOGIC_VECTOR (128 downto 0);
        cancellation_unit_output_stream_full_n : IN STD_LOGIC;
        cancellation_unit_output_stream_write : OUT STD_LOGIC );
    end component;


    component lpcore_top_rollback_control_top IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        causality_violation_stream_dout : IN STD_LOGIC_VECTOR (47 downto 0);
        causality_violation_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        causality_violation_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        causality_violation_stream_empty_n : IN STD_LOGIC;
        causality_violation_stream_read : OUT STD_LOGIC;
        event_queue_rollback_info_stream_din : OUT STD_LOGIC_VECTOR (47 downto 0);
        event_queue_rollback_info_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        event_queue_rollback_info_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        event_queue_rollback_info_stream_full_n : IN STD_LOGIC;
        event_queue_rollback_info_stream_write : OUT STD_LOGIC;
        state_buffer_rollback_info_stream_din : OUT STD_LOGIC_VECTOR (47 downto 0);
        state_buffer_rollback_info_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        state_buffer_rollback_info_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        state_buffer_rollback_info_stream_full_n : IN STD_LOGIC;
        state_buffer_rollback_info_stream_write : OUT STD_LOGIC;
        cancellation_unit_rollback_info_stream_din : OUT STD_LOGIC_VECTOR (47 downto 0);
        cancellation_unit_rollback_info_stream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        cancellation_unit_rollback_info_stream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        cancellation_unit_rollback_info_stream_full_n : IN STD_LOGIC;
        cancellation_unit_rollback_info_stream_write : OUT STD_LOGIC );
    end component;


    component lpcore_top_fifo_w48_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (47 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (47 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component lpcore_top_fifo_w129_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (128 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (128 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component lpcore_top_fifo_w80_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (79 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (79 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component lpcore_top_fifo_w209_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (208 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (208 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    event_queue_top_0_U0 : component lpcore_top_event_queue_top_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => event_queue_top_0_U0_ap_start,
        ap_done => event_queue_top_0_U0_ap_done,
        ap_continue => event_queue_top_0_U0_ap_continue,
        ap_idle => event_queue_top_0_U0_ap_idle,
        ap_ready => event_queue_top_0_U0_ap_ready,
        init_event_stream_dout => init_event_stream_dout,
        init_event_stream_empty_n => init_event_stream_empty_n,
        init_event_stream_read => event_queue_top_0_U0_init_event_stream_read,
        event_queue_full_stream_din => event_queue_top_0_U0_event_queue_full_stream_din,
        event_queue_full_stream_full_n => event_queue_full_stream_full_n,
        event_queue_full_stream_write => event_queue_top_0_U0_event_queue_full_stream_write,
        event_queue_rollback_info_stream_dout => event_queue_rollback_info_stream_dout,
        event_queue_rollback_info_stream_num_data_valid => event_queue_rollback_info_stream_num_data_valid,
        event_queue_rollback_info_stream_fifo_cap => event_queue_rollback_info_stream_fifo_cap,
        event_queue_rollback_info_stream_empty_n => event_queue_rollback_info_stream_empty_n,
        event_queue_rollback_info_stream_read => event_queue_top_0_U0_event_queue_rollback_info_stream_read,
        anti_message_stream_dout => anti_message_stream_dout,
        anti_message_stream_empty_n => anti_message_stream_empty_n,
        anti_message_stream_read => event_queue_top_0_U0_anti_message_stream_read,
        enqueue_event_stream_dout => enqueue_event_stream_dout,
        enqueue_event_stream_empty_n => enqueue_event_stream_empty_n,
        enqueue_event_stream_read => event_queue_top_0_U0_enqueue_event_stream_read,
        commit_time_stream_dout => commit_time_stream_dout,
        commit_time_stream_empty_n => commit_time_stream_empty_n,
        commit_time_stream_read => event_queue_top_0_U0_commit_time_stream_read,
        issued_event_stream_din => event_queue_top_0_U0_issued_event_stream_din,
        issued_event_stream_num_data_valid => issued_event_stream_num_data_valid,
        issued_event_stream_fifo_cap => issued_event_stream_fifo_cap,
        issued_event_stream_full_n => issued_event_stream_full_n,
        issued_event_stream_write => event_queue_top_0_U0_issued_event_stream_write,
        causality_violation_stream_din => event_queue_top_0_U0_causality_violation_stream_din,
        causality_violation_stream_num_data_valid => causality_violation_stream_num_data_valid,
        causality_violation_stream_fifo_cap => causality_violation_stream_fifo_cap,
        causality_violation_stream_full_n => causality_violation_stream_full_n,
        causality_violation_stream_write => event_queue_top_0_U0_causality_violation_stream_write);

    state_buffer_top_0_U0 : component lpcore_top_state_buffer_top_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => state_buffer_top_0_U0_ap_start,
        ap_done => state_buffer_top_0_U0_ap_done,
        ap_continue => state_buffer_top_0_U0_ap_continue,
        ap_idle => state_buffer_top_0_U0_ap_idle,
        ap_ready => state_buffer_top_0_U0_ap_ready,
        state_buffer_rollback_info_stream_dout => state_buffer_rollback_info_stream_dout,
        state_buffer_rollback_info_stream_num_data_valid => state_buffer_rollback_info_stream_num_data_valid,
        state_buffer_rollback_info_stream_fifo_cap => state_buffer_rollback_info_stream_fifo_cap,
        state_buffer_rollback_info_stream_empty_n => state_buffer_rollback_info_stream_empty_n,
        state_buffer_rollback_info_stream_read => state_buffer_top_0_U0_state_buffer_rollback_info_stream_read,
        state_buffer_input_stream_dout => state_buffer_input_stream_dout,
        state_buffer_input_stream_num_data_valid => state_buffer_input_stream_num_data_valid,
        state_buffer_input_stream_fifo_cap => state_buffer_input_stream_fifo_cap,
        state_buffer_input_stream_empty_n => state_buffer_input_stream_empty_n,
        state_buffer_input_stream_read => state_buffer_top_0_U0_state_buffer_input_stream_read,
        issued_event_stream_dout => issued_event_stream_dout,
        issued_event_stream_num_data_valid => issued_event_stream_num_data_valid,
        issued_event_stream_fifo_cap => issued_event_stream_fifo_cap,
        issued_event_stream_empty_n => issued_event_stream_empty_n,
        issued_event_stream_read => state_buffer_top_0_U0_issued_event_stream_read,
        event_processor_input_stream_din => state_buffer_top_0_U0_event_processor_input_stream_din,
        event_processor_input_stream_num_data_valid => event_processor_input_stream_num_data_valid,
        event_processor_input_stream_fifo_cap => event_processor_input_stream_fifo_cap,
        event_processor_input_stream_full_n => event_processor_input_stream_full_n,
        event_processor_input_stream_write => state_buffer_top_0_U0_event_processor_input_stream_write);

    event_processor_top_0_U0 : component lpcore_top_event_processor_top_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => event_processor_top_0_U0_ap_start,
        ap_done => event_processor_top_0_U0_ap_done,
        ap_continue => event_processor_top_0_U0_ap_continue,
        ap_idle => event_processor_top_0_U0_ap_idle,
        ap_ready => event_processor_top_0_U0_ap_ready,
        event_processor_input_stream_dout => event_processor_input_stream_dout,
        event_processor_input_stream_num_data_valid => event_processor_input_stream_num_data_valid,
        event_processor_input_stream_fifo_cap => event_processor_input_stream_fifo_cap,
        event_processor_input_stream_empty_n => event_processor_input_stream_empty_n,
        event_processor_input_stream_read => event_processor_top_0_U0_event_processor_input_stream_read,
        state_buffer_input_stream_din => event_processor_top_0_U0_state_buffer_input_stream_din,
        state_buffer_input_stream_num_data_valid => state_buffer_input_stream_num_data_valid,
        state_buffer_input_stream_fifo_cap => state_buffer_input_stream_fifo_cap,
        state_buffer_input_stream_full_n => state_buffer_input_stream_full_n,
        state_buffer_input_stream_write => event_processor_top_0_U0_state_buffer_input_stream_write,
        output_event_stream_din => event_processor_top_0_U0_output_event_stream_din,
        output_event_stream_full_n => output_event_stream_full_n,
        output_event_stream_write => event_processor_top_0_U0_output_event_stream_write,
        cancellation_unit_input_stream_din => event_processor_top_0_U0_cancellation_unit_input_stream_din,
        cancellation_unit_input_stream_num_data_valid => cancellation_unit_input_stream_num_data_valid,
        cancellation_unit_input_stream_fifo_cap => cancellation_unit_input_stream_fifo_cap,
        cancellation_unit_input_stream_full_n => cancellation_unit_input_stream_full_n,
        cancellation_unit_input_stream_write => event_processor_top_0_U0_cancellation_unit_input_stream_write);

    cancellation_unit_top_0_U0 : component lpcore_top_cancellation_unit_top_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => cancellation_unit_top_0_U0_ap_start,
        ap_done => cancellation_unit_top_0_U0_ap_done,
        ap_continue => cancellation_unit_top_0_U0_ap_continue,
        ap_idle => cancellation_unit_top_0_U0_ap_idle,
        ap_ready => cancellation_unit_top_0_U0_ap_ready,
        cancellation_unit_rollback_info_stream_dout => cancellation_unit_rollback_info_stream_dout,
        cancellation_unit_rollback_info_stream_num_data_valid => cancellation_unit_rollback_info_stream_num_data_valid,
        cancellation_unit_rollback_info_stream_fifo_cap => cancellation_unit_rollback_info_stream_fifo_cap,
        cancellation_unit_rollback_info_stream_empty_n => cancellation_unit_rollback_info_stream_empty_n,
        cancellation_unit_rollback_info_stream_read => cancellation_unit_top_0_U0_cancellation_unit_rollback_info_stream_read,
        cancellation_unit_input_stream_dout => cancellation_unit_input_stream_dout,
        cancellation_unit_input_stream_num_data_valid => cancellation_unit_input_stream_num_data_valid,
        cancellation_unit_input_stream_fifo_cap => cancellation_unit_input_stream_fifo_cap,
        cancellation_unit_input_stream_empty_n => cancellation_unit_input_stream_empty_n,
        cancellation_unit_input_stream_read => cancellation_unit_top_0_U0_cancellation_unit_input_stream_read,
        cancellation_unit_output_stream_din => cancellation_unit_top_0_U0_cancellation_unit_output_stream_din,
        cancellation_unit_output_stream_full_n => cancellation_unit_output_stream_full_n,
        cancellation_unit_output_stream_write => cancellation_unit_top_0_U0_cancellation_unit_output_stream_write);

    rollback_control_top_U0 : component lpcore_top_rollback_control_top
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => rollback_control_top_U0_ap_start,
        ap_done => rollback_control_top_U0_ap_done,
        ap_continue => rollback_control_top_U0_ap_continue,
        ap_idle => rollback_control_top_U0_ap_idle,
        ap_ready => rollback_control_top_U0_ap_ready,
        causality_violation_stream_dout => causality_violation_stream_dout,
        causality_violation_stream_num_data_valid => causality_violation_stream_num_data_valid,
        causality_violation_stream_fifo_cap => causality_violation_stream_fifo_cap,
        causality_violation_stream_empty_n => causality_violation_stream_empty_n,
        causality_violation_stream_read => rollback_control_top_U0_causality_violation_stream_read,
        event_queue_rollback_info_stream_din => rollback_control_top_U0_event_queue_rollback_info_stream_din,
        event_queue_rollback_info_stream_num_data_valid => event_queue_rollback_info_stream_num_data_valid,
        event_queue_rollback_info_stream_fifo_cap => event_queue_rollback_info_stream_fifo_cap,
        event_queue_rollback_info_stream_full_n => event_queue_rollback_info_stream_full_n,
        event_queue_rollback_info_stream_write => rollback_control_top_U0_event_queue_rollback_info_stream_write,
        state_buffer_rollback_info_stream_din => rollback_control_top_U0_state_buffer_rollback_info_stream_din,
        state_buffer_rollback_info_stream_num_data_valid => state_buffer_rollback_info_stream_num_data_valid,
        state_buffer_rollback_info_stream_fifo_cap => state_buffer_rollback_info_stream_fifo_cap,
        state_buffer_rollback_info_stream_full_n => state_buffer_rollback_info_stream_full_n,
        state_buffer_rollback_info_stream_write => rollback_control_top_U0_state_buffer_rollback_info_stream_write,
        cancellation_unit_rollback_info_stream_din => rollback_control_top_U0_cancellation_unit_rollback_info_stream_din,
        cancellation_unit_rollback_info_stream_num_data_valid => cancellation_unit_rollback_info_stream_num_data_valid,
        cancellation_unit_rollback_info_stream_fifo_cap => cancellation_unit_rollback_info_stream_fifo_cap,
        cancellation_unit_rollback_info_stream_full_n => cancellation_unit_rollback_info_stream_full_n,
        cancellation_unit_rollback_info_stream_write => rollback_control_top_U0_cancellation_unit_rollback_info_stream_write);

    event_queue_rollback_info_stream_U : component lpcore_top_fifo_w48_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rollback_control_top_U0_event_queue_rollback_info_stream_din,
        if_full_n => event_queue_rollback_info_stream_full_n,
        if_write => rollback_control_top_U0_event_queue_rollback_info_stream_write,
        if_dout => event_queue_rollback_info_stream_dout,
        if_num_data_valid => event_queue_rollback_info_stream_num_data_valid,
        if_fifo_cap => event_queue_rollback_info_stream_fifo_cap,
        if_empty_n => event_queue_rollback_info_stream_empty_n,
        if_read => event_queue_top_0_U0_event_queue_rollback_info_stream_read);

    issued_event_stream_U : component lpcore_top_fifo_w129_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => event_queue_top_0_U0_issued_event_stream_din,
        if_full_n => issued_event_stream_full_n,
        if_write => event_queue_top_0_U0_issued_event_stream_write,
        if_dout => issued_event_stream_dout,
        if_num_data_valid => issued_event_stream_num_data_valid,
        if_fifo_cap => issued_event_stream_fifo_cap,
        if_empty_n => issued_event_stream_empty_n,
        if_read => state_buffer_top_0_U0_issued_event_stream_read);

    causality_violation_stream_U : component lpcore_top_fifo_w48_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => event_queue_top_0_U0_causality_violation_stream_din,
        if_full_n => causality_violation_stream_full_n,
        if_write => event_queue_top_0_U0_causality_violation_stream_write,
        if_dout => causality_violation_stream_dout,
        if_num_data_valid => causality_violation_stream_num_data_valid,
        if_fifo_cap => causality_violation_stream_fifo_cap,
        if_empty_n => causality_violation_stream_empty_n,
        if_read => rollback_control_top_U0_causality_violation_stream_read);

    state_buffer_rollback_info_stream_U : component lpcore_top_fifo_w48_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rollback_control_top_U0_state_buffer_rollback_info_stream_din,
        if_full_n => state_buffer_rollback_info_stream_full_n,
        if_write => rollback_control_top_U0_state_buffer_rollback_info_stream_write,
        if_dout => state_buffer_rollback_info_stream_dout,
        if_num_data_valid => state_buffer_rollback_info_stream_num_data_valid,
        if_fifo_cap => state_buffer_rollback_info_stream_fifo_cap,
        if_empty_n => state_buffer_rollback_info_stream_empty_n,
        if_read => state_buffer_top_0_U0_state_buffer_rollback_info_stream_read);

    state_buffer_input_stream_U : component lpcore_top_fifo_w80_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => event_processor_top_0_U0_state_buffer_input_stream_din,
        if_full_n => state_buffer_input_stream_full_n,
        if_write => event_processor_top_0_U0_state_buffer_input_stream_write,
        if_dout => state_buffer_input_stream_dout,
        if_num_data_valid => state_buffer_input_stream_num_data_valid,
        if_fifo_cap => state_buffer_input_stream_fifo_cap,
        if_empty_n => state_buffer_input_stream_empty_n,
        if_read => state_buffer_top_0_U0_state_buffer_input_stream_read);

    event_processor_input_stream_U : component lpcore_top_fifo_w209_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => state_buffer_top_0_U0_event_processor_input_stream_din,
        if_full_n => event_processor_input_stream_full_n,
        if_write => state_buffer_top_0_U0_event_processor_input_stream_write,
        if_dout => event_processor_input_stream_dout,
        if_num_data_valid => event_processor_input_stream_num_data_valid,
        if_fifo_cap => event_processor_input_stream_fifo_cap,
        if_empty_n => event_processor_input_stream_empty_n,
        if_read => event_processor_top_0_U0_event_processor_input_stream_read);

    cancellation_unit_input_stream_U : component lpcore_top_fifo_w129_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => event_processor_top_0_U0_cancellation_unit_input_stream_din,
        if_full_n => cancellation_unit_input_stream_full_n,
        if_write => event_processor_top_0_U0_cancellation_unit_input_stream_write,
        if_dout => cancellation_unit_input_stream_dout,
        if_num_data_valid => cancellation_unit_input_stream_num_data_valid,
        if_fifo_cap => cancellation_unit_input_stream_fifo_cap,
        if_empty_n => cancellation_unit_input_stream_empty_n,
        if_read => cancellation_unit_top_0_U0_cancellation_unit_input_stream_read);

    cancellation_unit_rollback_info_stream_U : component lpcore_top_fifo_w48_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rollback_control_top_U0_cancellation_unit_rollback_info_stream_din,
        if_full_n => cancellation_unit_rollback_info_stream_full_n,
        if_write => rollback_control_top_U0_cancellation_unit_rollback_info_stream_write,
        if_dout => cancellation_unit_rollback_info_stream_dout,
        if_num_data_valid => cancellation_unit_rollback_info_stream_num_data_valid,
        if_fifo_cap => cancellation_unit_rollback_info_stream_fifo_cap,
        if_empty_n => cancellation_unit_rollback_info_stream_empty_n,
        if_read => cancellation_unit_top_0_U0_cancellation_unit_rollback_info_stream_read);





    ap_sync_reg_cancellation_unit_top_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_cancellation_unit_top_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_cancellation_unit_top_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_event_processor_top_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_event_processor_top_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_event_processor_top_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_rollback_control_top_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_rollback_control_top_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_rollback_control_top_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_state_buffer_top_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_state_buffer_top_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_state_buffer_top_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;

    anti_message_stream_read <= event_queue_top_0_U0_anti_message_stream_read;
    ap_done <= ap_sync_done;
    ap_idle <= (state_buffer_top_0_U0_ap_idle and rollback_control_top_U0_ap_idle and event_queue_top_0_U0_ap_idle and event_processor_top_0_U0_ap_idle and cancellation_unit_top_0_U0_ap_idle);
    ap_ready <= event_queue_top_0_U0_ap_ready;
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (rollback_control_top_U0_ap_done and cancellation_unit_top_0_U0_ap_done);
    cancellation_unit_output_stream_din <= cancellation_unit_top_0_U0_cancellation_unit_output_stream_din;
    cancellation_unit_output_stream_write <= cancellation_unit_top_0_U0_cancellation_unit_output_stream_write;
    cancellation_unit_top_0_U0_ap_continue <= ap_sync_continue;
    cancellation_unit_top_0_U0_ap_start <= (ap_sync_reg_cancellation_unit_top_0_U0_ap_start or ap_start);
    commit_time_stream_read <= event_queue_top_0_U0_commit_time_stream_read;
    enqueue_event_stream_read <= event_queue_top_0_U0_enqueue_event_stream_read;
    event_processor_top_0_U0_ap_continue <= ap_const_logic_1;
    event_processor_top_0_U0_ap_start <= (ap_sync_reg_event_processor_top_0_U0_ap_start or ap_start);
    event_queue_full_stream_din <= event_queue_top_0_U0_event_queue_full_stream_din;
    event_queue_full_stream_write <= event_queue_top_0_U0_event_queue_full_stream_write;
    event_queue_top_0_U0_ap_continue <= ap_const_logic_1;
    event_queue_top_0_U0_ap_start <= ap_start;
    init_event_stream_read <= event_queue_top_0_U0_init_event_stream_read;
    output_event_stream_din <= event_processor_top_0_U0_output_event_stream_din;
    output_event_stream_write <= event_processor_top_0_U0_output_event_stream_write;
    rollback_control_top_U0_ap_continue <= ap_sync_continue;
    rollback_control_top_U0_ap_start <= (ap_sync_reg_rollback_control_top_U0_ap_start or ap_start);
    state_buffer_top_0_U0_ap_continue <= ap_const_logic_1;
    state_buffer_top_0_U0_ap_start <= (ap_sync_reg_state_buffer_top_0_U0_ap_start or ap_start);
end behav;
